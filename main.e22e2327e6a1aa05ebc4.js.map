{"version":3,"mappings":"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","names":["t","f","x","i0","BookingsComponent","constructor","_router","this","label","isSelect","routerLink","trackByIndex","index","ngOnInit","tabs","map","item","url","selectors","CompletedBookingsComponent","DraftsBookingsComponent","OPEN_BOOKINGS_TABLE_HEADERS","isSort","EQimaTableHeadCellSort","key","type","ETableDataType","OpenBookingsComponent","sessionStorage","getItem","EStorageKeys","TABLE_PAGINATION","value","SERVER_API_URL","userId","encodeURIComponent","params","openBookingsSelectActive","openBookingsTableHeaders","openBookingsApiUrl","openBookingsApiUrls","OPEN_BOOKINGS_TABLE_ID","openBookingsSelectChange","id","openBookingsPaginationChange","page","currentApiUrls","searchParams","URLSearchParams","set","toString","ctx","ROUTES","path","component","canActivate","AuthoritiesGuard","children","redirectTo","pathMatch","BookingsModule","RouterModule","TranslateModule","QimaTabsModule","QimaTabModule","QimaTabsAutoSelectDirectiveModule","CommonModule","DataTableModule","EPhoneValidStatus","BannerService","_httpClient","sendAppLink$","data","post","MARKETING_WEBSITE_APP_LINK","countryCode","phoneNumber","token","observe","responseType","factory","PhoneValidComponent","EQimaIconName","GetAppComponent","_cookieStorage","_bannerService","_changeDetectorRef","_translateService","EventEmitter","EQimaButtonIconStyle","EQimaButtonSize","EQimaButtonWidth","EQimaInputSize","IMAGES","undefined","FormControl","defaultCountry","QIMA_COUNTRY_AND_AREA_ITEMS","country","iso2","EQimaIsoCountryCode","formControl","markAsDirty","markAsTouched","valueChanges","pipe","untilDestroyed","subscribe","isLinkButtonDisabled","getRealPhone","length","dealWithBannerCookie","put","closeClick","emit","onCloseClick","split","replace","onSendClick","p","_a","includes","phoneValidStatus","phoneValidContent","instant","isShowPhoneValid","a","_b","dialCodes","response","body","mobileNumber","markForCheck","onInputPhoneClear","decls","R","UntilDestroy","CookieService","ChangeDetectorRef","TranslateService","BannerComponent","_authenticationService","getCurrentUser","_getBannerStatus","isShowGetApp","get","COMMON_HEADERS","UPCOMING_ORDERS_TABLE_HEADERS","UpcomingOrdersComponent","shouldUpcomingTable","_","userData","features","viewReportsOnly","upcomingSelectActive","upcomingTableHeaders","upcomingApiUrl","upcomingApiUrls","inspections_upcoming","upcomingSelectChange","LATEST_REPORTS_TABLE_HEADERS","LatestReportsComponent","getDateRange","shouldReportTable","lastReportsSelectActive","reportApiUrl","reportApiUrls","inspections_report","reportTableHeaders","date","Date","setFullYear","getFullYear","getMonth","getDate","reportSelectChange","sourceDataConvertTableData","sourceDataConvertTableDataForLabTesting","source","headers","tableData","pageItems","forEach","pageItem","rowData","head","cellData","order","push","EAccountSummaryStatus","threshold","content","status","AccountSummaryData","local","super","formatPercent","toFixed","AccountSummaryService","getAccountSummaryData$","q","AccountSummaryCardComponent","AccountSummaryComponent","_accountSummaryService","locale","EQimaDividerOrientation","EQimaButtonStyle","inspectionOrdersCompleted","inspectionSupplierVisited","inspectionAvgCost","inspectionBeyondAQLRate","inspectionServiceLevel","inspectionRejectionRate","getAccountSummaryStatus","accountSummary","hasAccountSummaryContent","every","AccountSummaryCurrencyData","AccountSummaryPercentageData","detectChanges","LOCALE_ID","String","LandingComponent","LandingModule","QimaDividerModule","QimaInputSelectModule","QimaMenuItemTextModule","FormsModule","QimaMenuModule","QimaIconModule","QimaButtonModule","QimaButtonIconModule","QimaInputPhoneModule","ReactiveFormsModule","UserService","getUserById$","d","L","LoginComponent","_userService","_activatedRoute","_getAuthInfoByRoute","_getUserData","queryParams","setItem","user","JSON","stringify","updateUserData","navigate","AuthenticationService","ActivatedRoute","Router","LoginModule","DataTableService","BehaviorSubject","combineLatest","tableData$","sort$","filter$","sort","filter","console","log","updateTableData","next","updateSort","str","updateFilter","getTableData$","m","HttpClient","TableComponent","qimaTableHeadCellSortAscendingChange","containsSortEvent","tableSort","sortingMode","position","DataTableComponent","_dataTableService","sortEvent","onToolbarSelectChange","selectId","toolbarSelectChange","onFilter","dataTableSubject$","res","_getTableData","ngOnChanges","changes","_onApiUrlChange","tablePaginationActivePageChange","paginationChange","tablePaginationPageSizeChange","pageSizeChange","has","apiUrl","currentValue","previousValue","tableTotalSize","totalSize","tableHeaders","_sourceDataConvertTableData","TableModule","QimaTableHeadCellModule","QimaTableModule","QimaTableHeadModule","QimaTableRowModule","QimaTableBodyCellTextModule","QimaTableBodyModule","SectionTitleModule","QimaPaginationModule","SectionTitleComponent","MARKETING_WEBSITE","ENVIRONMENT","qimaLogo","upcomingIcon","reportIcon","bannerLogo","pageSize10","pageSize25","pageSize50","pageSize100","pageSize150","pageSize200","pageSize250","navigateToLogin","_document","Subject","currentUserSubject$","logout","removeItem","remove","location","href","assign","isAuthenticated","parse","DOCUMENT","production","NEW_ACA_LOGIN_URL","origin","loadChildren","Promise","then","o","ProductInspectionsModule","ReportsModule","PaymentsModule","AppRoutingModule","ELocales","HeaderService","getCompanyLogo$","companyId","E","A","image","getSicImage$","sicId","c","HeaderComponent","_headerService","EQimaAvatarSize","title","openProfileActions","isDropDownVisible","formatAvatarName","r","currentUser","sic","sicArray","i","avatarFirstName","avatarLastName","getUserInfo","_getCompanyLogo","_getSic","parentCompanyName","company","companyLogo","_c","sicImage","v","AsideService","updateAsideMenuShow","isShow","asideMenuShowSubject$","BookNowComponent","onClick","event","_emitClick","onEnter","bookNowClick","OverlayComponent","overlayClick","AsideItemComponent","EQimaColorCherry","EQimaDotSize","asideItemClick","AsideMenuItemComponent","EQimaColorPool","itemClick","PreviousOrderItemComponent","EQimaIceCubeSize","EQimaIceCubeStyle","AsideMenuComponent","_asideService","serviceTypes","iceCubeLabel","orderName","orderDate","EQimaDividerStyle","_closeAsideMenu","onAsideMenuBusinessSolutionClick","asideMenuBusinessSolutionIndex","serviceTypesActive","businessSolutions","isExpanded","onPreviousOrderItemClick","onAsideMenuServiceTypeClick","asideMenuServiceTypeIndex","AsideComponent","iconName","isAsideMenuShow","onAsideItemClick","asideItemCheckedIndex","onOverlayClick","onBookNowClick","MainComponent","initChat","email","login","firstName","lastName","windowRef","defaultView","MessageBirdChatWidget","init","identify","Login","ngAfterViewInit","Document","AsideMenuModule","QimaIceCubeModule","QimaDotModule","OverlayModule","AsideModule","HeaderModule","QimaAvatarModule","MainModule","httpBackend","TranslateHttpLoader","translate","__awaiter","addLangs","setDefaultLang","use","toPromise","AuthInterceptor","intercept","request","handle","clone","setHeaders","authorization","EHttpStatusCode","ErrorHandlerInterceptor","tap","error","HttpErrorResponse","Error","dayjs","localizedFormat","timezone","_localeId","translate$","translationKey","extra","translateService","localeId","TranslationService","DateService","format","AppModule","bootstrap","provide","QIMA_DATE_FACTORY_TOKEN","useFactory","DateFactory","APP_INITIALIZER","LocalInitProvider","deps","multi","QIMA_ASSETS_PATH_TOKEN","useValue","HTTP_INTERCEPTORS","useClass","QIMA_TRANSLATION_FACTORY_TOKEN","TranslationFactory","imports","BrowserModule","BrowserAnimationsModule","QimaModule","QimaDateModule","HttpClientModule","QimaTranslationModule","defaultLanguage","loader","TranslateLoader","HttpLoaderFactory","HttpBackend","AngularSvgIconModule","CookieModule","QimaLoggerModule","loggerLevel","EQimaLoggerLevel","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sources":["./apps/aca-new/$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./apps/aca-new/src/app/pages/bookings/bookings.component.html","./apps/aca-new/src/app/pages/bookings/bookings.component.ts","./apps/aca-new/src/app/pages/bookings/pages/completed-bookings/completed-bookings.component.ts","./apps/aca-new/src/app/pages/bookings/pages/completed-bookings/completed-bookings.component.html","./apps/aca-new/src/app/pages/bookings/pages/drafts-bookings/drafts-bookings.component.ts","./apps/aca-new/src/app/pages/bookings/pages/drafts-bookings/drafts-bookings.component.html","./apps/aca-new/src/app/pages/bookings/pages/open-bookings/shared/constants/open-booking-table.constants.ts","./apps/aca-new/src/app/pages/bookings/pages/open-bookings/open-bookings.component.ts","./apps/aca-new/src/app/pages/bookings/pages/open-bookings/open-bookings.component.html","./apps/aca-new/src/app/pages/bookings/bookings.module.ts","./apps/aca-new/src/app/pages/landing/pages/banner/shared/models/enums/phone-valid-status.constants.ts","./apps/aca-new/src/app/pages/landing/pages/banner/shared/service/banner.service.ts","./apps/aca-new/src/app/pages/landing/pages/banner/shared/component/phone-valid/phone-valid.component.ts","./apps/aca-new/src/app/pages/landing/pages/banner/shared/component/phone-valid/phone-valid.component.html","./apps/aca-new/src/app/pages/landing/pages/banner/shared/component/get-app/get-app.component.html","./apps/aca-new/src/app/pages/landing/pages/banner/shared/component/get-app/get-app.component.ts","./apps/aca-new/src/app/pages/landing/pages/banner/banner.component.html","./apps/aca-new/src/app/pages/landing/pages/banner/banner.component.ts","./apps/aca-new/src/app/pages/landing/pages/upcoming-orders/shared/constants/upcoming-orders-table.constants.ts","./apps/aca-new/src/app/pages/landing/pages/upcoming-orders/upcoming-orders.component.html","./apps/aca-new/src/app/pages/landing/pages/upcoming-orders/upcoming-orders.component.ts","./apps/aca-new/src/app/pages/landing/pages/latest-reports/shared/constants/latest-reports-table.constants.ts","./apps/aca-new/src/app/pages/landing/pages/latest-reports/latest-reports.component.html","./apps/aca-new/src/app/pages/landing/pages/latest-reports/latest-reports.component.ts","./apps/aca-new/src/app/pages/landing/pages/account-summary/shared/models/enums/account-summary-status.constants.ts","./apps/aca-new/src/app/pages/landing/pages/account-summary/shared/models/classes/account-summary-data.class.ts","./apps/aca-new/src/app/pages/landing/pages/account-summary/shared/service/account-summary.service.ts","./apps/aca-new/src/app/pages/landing/pages/account-summary/shared/components/account-summary-card/account-summary-card.component.ts","./apps/aca-new/src/app/pages/landing/pages/account-summary/shared/components/account-summary-card/account-summary-card.component.html","./apps/aca-new/src/app/pages/landing/pages/account-summary/account-summary.component.html","./apps/aca-new/src/app/pages/landing/pages/account-summary/account-summary.component.ts","./apps/aca-new/src/app/pages/landing/pages/account-summary/shared/constants/account-summary.constants.ts","./apps/aca-new/src/app/pages/landing/landing.component.ts","./apps/aca-new/src/app/pages/landing/landing.component.html","./apps/aca-new/src/app/pages/landing/landing.module.ts","./apps/aca-new/src/app/pages/user/shared/service/user.service.ts","./apps/aca-new/src/app/pages/user/pages/login/login.component.ts","./apps/aca-new/src/app/pages/user/pages/login/login.component.html","./apps/aca-new/src/app/pages/user/pages/login/login.module.ts","./apps/aca-new/src/app/shared/components/data-table/shared/service/data-table.service.ts","./apps/aca-new/src/app/shared/components/table/table.component.html","./apps/aca-new/src/app/shared/components/table/table.component.ts","./apps/aca-new/src/app/shared/components/data-table/data-table.component.html","./apps/aca-new/src/app/shared/components/data-table/data-table.component.ts","./apps/aca-new/src/app/shared/components/table/table.module.ts","./apps/aca-new/src/app/shared/components/data-table/data-table.module.ts","./apps/aca-new/src/app/shared/components/section-title/section-title.component.ts","./apps/aca-new/src/app/shared/components/section-title/section-title.component.html","./apps/aca-new/src/app/shared/components/section-title/section-title.module.ts","./apps/aca-new/src/app/shared/components/table/shared/enums/table-data-type.enum.ts","./apps/aca-new/src/app/shared/constants/app.constants.ts","./apps/aca-new/src/app/shared/constants/images.constants.ts","./apps/aca-new/src/app/shared/constants/table-pagination.constants.ts","./apps/aca-new/src/app/shared/guards/authorities/authorities.guard.ts","./apps/aca-new/src/app/shared/models/enums/storage-keys.enum.ts","./apps/aca-new/src/app/shared/services/authentication.service.ts","./apps/aca-new/src/environments/environment.pp.ts","./apps/aca-new/src/app/app-routing.module.ts","./apps/aca-new/src/app/shared/models/enums/locales.enum.ts","./apps/aca-new/src/app/shared/components/header/shared/service/header.service.ts","./apps/aca-new/src/app/shared/components/header/header.component.html","./apps/aca-new/src/app/shared/components/header/header.component.ts","./apps/aca-new/src/app/shared/components/aside/shared/services/aside.service.ts","./apps/aca-new/src/app/shared/components/aside/shared/components/book-now/book-now.component.ts","./apps/aca-new/src/app/shared/components/aside/shared/constants/aside-style.constants.ts","./apps/aca-new/src/app/shared/components/aside/shared/components/book-now/book-now.component.html","./apps/aca-new/src/app/shared/components/overlay/overlay.component.ts","./apps/aca-new/src/app/shared/components/overlay/overlay.component.html","./apps/aca-new/src/app/shared/components/aside/shared/components/aside-item/aside-item.component.ts","./apps/aca-new/src/app/shared/components/aside/shared/components/aside-item/aside-item.component.html","./apps/aca-new/src/app/shared/components/aside/shared/components/aside-menu/share/components/aside-menu-item/aside-menu-item.component.html","./apps/aca-new/src/app/shared/components/aside/shared/components/aside-menu/share/components/aside-menu-item/aside-menu-item.component.ts","./apps/aca-new/src/app/shared/components/aside/shared/components/aside-menu/share/components/previous-order-item/previous-order-item.component.ts","./apps/aca-new/src/app/shared/components/aside/shared/components/aside-menu/share/components/previous-order-item/previous-order-item.component.html","./apps/aca-new/src/app/shared/components/aside/shared/components/aside-menu/aside-menu.component.html","./apps/aca-new/src/app/shared/components/aside/shared/components/aside-menu/aside-menu.component.ts","./apps/aca-new/src/app/shared/components/aside/aside.component.html","./apps/aca-new/src/app/shared/components/aside/aside.component.ts","./apps/aca-new/src/app/shared/components/main/main.component.ts","./apps/aca-new/src/app/shared/components/main/main.component.html","./apps/aca-new/src/app/shared/components/aside/shared/components/aside-menu/aside-menu.module.ts","./apps/aca-new/src/app/shared/components/overlay/overlay.module.ts","./apps/aca-new/src/app/shared/components/aside/aside.module.ts","./apps/aca-new/src/app/shared/components/header/header.module.ts","./apps/aca-new/src/app/shared/components/main/main.module.ts","./apps/aca-new/src/app/shared/factories/i18n.factories.ts","./apps/aca-new/src/app/shared/interceptors/auth.interceptor.ts","./apps/aca-new/src/app/shared/models/enums/http-status-code.enum.ts","./apps/aca-new/src/app/shared/interceptors/error-handler.interceptor.ts","./apps/aca-new/src/app/app.module.ts","./apps/aca-new/src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 7747;\nmodule.exports = webpackEmptyAsyncContext;","<div class=\"app-bookings\">\r\n  <div class=\"app-bookings__container\">\r\n    <div class=\"app-bookings__container__title\">{{ 'BOOKINGS.MODULE_TITLE' | translate }}</div>\r\n\r\n    <qima-tabs qimaTabsAutoSelect>\r\n      <qima-tab\r\n        *ngFor=\"let tab of tabs; let index = index; trackBy: trackByIndex\"\r\n        [qimaTabIsSelected]=\"tab.isSelect\"\r\n        [qimaTabLabel]=\"tab.label | translate\"\r\n        [routerLink]=\"tab.routerLink\"\r\n      >\r\n      </qima-tab>\r\n    </qima-tabs>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { ICommonTableTab } from '@aca-new/app/shared/models/interfaces/common-table-tab.interface';\r\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-bookings',\r\n  templateUrl: './bookings.component.html',\r\n  styleUrls: ['./bookings.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BookingsComponent implements OnInit {\r\n  public tabs: ICommonTableTab[] = [\r\n    {\r\n      label: 'BOOKINGS.OPEN_BOOKINGS',\r\n      isSelect: true,\r\n      routerLink: '/bookings/open',\r\n    },\r\n    {\r\n      label: 'BOOKINGS.COMPLETED_BOOKINGS',\r\n      isSelect: false,\r\n      routerLink: '/bookings/completed',\r\n    },\r\n    {\r\n      label: 'BOOKINGS.DRAFTS',\r\n      isSelect: false,\r\n      routerLink: '/bookings/drafts',\r\n    },\r\n  ];\r\n\r\n  public constructor(private readonly _router: Router) {}\r\n\r\n  public trackByIndex(index: Readonly<number>): number {\r\n    return index;\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n    this.tabs.map((item: ICommonTableTab): void => {\r\n      item.isSelect = item.routerLink === this._router.url;\r\n    });\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-completed-bookings',\r\n  templateUrl: './completed-bookings.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CompletedBookingsComponent {}\r\n","<div class=\"completed-bookings\">this is completed-bookings</div>\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-drafts-bookings',\r\n  templateUrl: './drafts-bookings.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DraftsBookingsComponent {}\r\n","<div class=\"drafts-bookings\">this is drafts-bookings</div>\r\n","import { ETableDataType } from '@aca-new/app/shared/components/table/shared/enums/table-data-type.enum';\r\nimport { ITableHeader } from '@aca-new/app/shared/components/table/shared/interfaces/table-header.interface';\r\nimport { EQimaTableHeadCellSort } from '@qima/ngx-qima';\r\n\r\nexport const OPEN_BOOKINGS_TABLE_ID = {\r\n  inspections: 'inspections',\r\n};\r\n\r\nexport const OPEN_BOOKINGS_TABLE_HEADERS: Record<string, ITableHeader[]> = {\r\n  [OPEN_BOOKINGS_TABLE_ID.inspections]: [\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'serviceTypeText',\r\n      label: 'TABLE.TYPE',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'serviceDate',\r\n      label: 'TABLE.SERVICE_DATE',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'bookingDate',\r\n      label: 'TABLE.BOOKING_DATA',\r\n      type: ETableDataType.STRING,\r\n    },\r\n\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'productNames',\r\n      label: 'TABLE.PRODUCT_NAME',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'poNumbers',\r\n      label: 'TABLE.PO_NO',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'clientReference',\r\n      label: 'TABLE.BOOKING_REF_NO',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'refNumber',\r\n      label: 'TABLE.REF_NO',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'supplierName',\r\n      label: 'TABLE.SUPPLIER',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'statusText',\r\n      label: 'TABLE.STATUS',\r\n      type: ETableDataType.STRING,\r\n    },\r\n  ],\r\n};\r\n","import {\r\n  OPEN_BOOKINGS_TABLE_HEADERS,\r\n  OPEN_BOOKINGS_TABLE_ID,\r\n} from '@aca-new/app/pages/bookings/pages/open-bookings/shared/constants/open-booking-table.constants';\r\nimport { IDataTableSelect } from '@aca-new/app/pages/landing/shared/models/interfaces/data-table-select.interface';\r\nimport { ITableHeader } from '@aca-new/app/shared/components/table/shared/interfaces/table-header.interface';\r\nimport { SERVER_API_URL } from '@aca-new/app/shared/constants/app.constants';\r\nimport { TABLE_PAGINATION } from '@aca-new/app/shared/constants/table-pagination.constants';\r\nimport { EStorageKeys } from '@aca-new/app/shared/models/enums/storage-keys.enum';\r\nimport { ICommonTableUrl } from '@aca-new/app/shared/models/interfaces/common-table-url.interface';\r\nimport { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-open-bookings',\r\n  templateUrl: './open-bookings.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class OpenBookingsComponent implements OnInit {\r\n  public readonly userId = sessionStorage.getItem(EStorageKeys.USER_ID);\r\n  public openBookingsApiUrl: string = '';\r\n  public openBookingsSelectActive: string = '';\r\n  public openBookingsTableHeaders: ITableHeader[] = [];\r\n  public openBookingsPageSizeList: number[] = [\r\n    TABLE_PAGINATION.pageSize50,\r\n    TABLE_PAGINATION.pageSize100,\r\n    TABLE_PAGINATION.pageSize150,\r\n    TABLE_PAGINATION.pageSize200,\r\n    TABLE_PAGINATION.pageSize250,\r\n  ];\r\n\r\n  public readonly openBookingsTableSelects: IDataTableSelect[] = [\r\n    {\r\n      label: 'UPCOMING_ORDERS.SELECT.INSPECTIONS',\r\n      value: OPEN_BOOKINGS_TABLE_ID.inspections,\r\n    },\r\n  ];\r\n\r\n  public readonly openBookingsApiUrls: Record<string, ICommonTableUrl> = {\r\n    [OPEN_BOOKINGS_TABLE_ID.inspections]: {\r\n      url: `${SERVER_API_URL}/user/${this.userId}/psi-orders?status=${encodeURIComponent('15,17,18,20,22,23,25,30,40,50')}&`,\r\n      params: 'page-size=50&page=1&sortType=desc&sortField=bookingDate',\r\n    },\r\n  };\r\n\r\n  public ngOnInit(): void {\r\n    this.openBookingsSelectActive = OPEN_BOOKINGS_TABLE_ID.inspections;\r\n    this.openBookingsTableHeaders = OPEN_BOOKINGS_TABLE_HEADERS.inspections;\r\n    this.openBookingsApiUrl =\r\n      this.openBookingsApiUrls[OPEN_BOOKINGS_TABLE_ID.inspections].url +\r\n      this.openBookingsApiUrls[OPEN_BOOKINGS_TABLE_ID.inspections].params;\r\n  }\r\n\r\n  public openBookingsSelectChange(id: Readonly<string>): void {\r\n    this.openBookingsSelectActive = id;\r\n    this.openBookingsApiUrl = this.openBookingsApiUrls[id].url + this.openBookingsApiUrls[id].params;\r\n    this.openBookingsTableHeaders = OPEN_BOOKINGS_TABLE_HEADERS[id];\r\n  }\r\n\r\n  public openBookingsPaginationChange(page: Readonly<number>): void {\r\n    const currentApiUrls = this.openBookingsApiUrls[this.openBookingsSelectActive];\r\n    const searchParams = new URLSearchParams(currentApiUrls.params);\r\n\r\n    searchParams.set('page', page.toString());\r\n    this.openBookingsApiUrl = currentApiUrls.url + searchParams.toString();\r\n  }\r\n}\r\n","<div class=\"open-bookings\">\r\n  <app-data-table\r\n    (dataTableToolbarSelectChange)=\"openBookingsSelectChange($event)\"\r\n    (dataTablePaginationChange)=\"openBookingsPaginationChange($event)\"\r\n    [dataTableSelectActive]=\"openBookingsSelectActive\"\r\n    [dataTableApiUrl]=\"openBookingsApiUrl\"\r\n    [dataTableHeaders]=\"openBookingsTableHeaders\"\r\n    [dataTableSelects]=\"openBookingsTableSelects\"\r\n    [dataTableEmptyMessage]=\"'BOOKINGS.OPEN_BOOKINGS_NO_DATA' | translate\"\r\n    [dataTableIsShowMore]=\"false\"\r\n    [dataTableIsShowSectionTitle]=\"false\"\r\n    [tablePageSizeList]=\"openBookingsPageSizeList\"\r\n    [dataTableShowPagination]=\"true\"\r\n  ></app-data-table>\r\n</div>\r\n","import { BookingsComponent } from '@aca-new/app/pages/bookings/bookings.component';\r\nimport { CompletedBookingsComponent } from '@aca-new/app/pages/bookings/pages/completed-bookings/completed-bookings.component';\r\nimport { DraftsBookingsComponent } from '@aca-new/app/pages/bookings/pages/drafts-bookings/drafts-bookings.component';\r\nimport { OpenBookingsComponent } from '@aca-new/app/pages/bookings/pages/open-bookings/open-bookings.component';\r\nimport { DataTableModule } from '@aca-new/app/shared/components/data-table/data-table.module';\r\nimport { AuthoritiesGuard } from '@aca-new/app/shared/guards/authorities/authorities.guard';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { QimaTabModule, QimaTabsAutoSelectDirectiveModule, QimaTabsModule } from '@qima/ngx-qima';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: BookingsComponent,\r\n    canActivate: [AuthoritiesGuard],\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'open',\r\n        pathMatch: 'full',\r\n      },\r\n      {\r\n        path: 'open',\r\n        component: OpenBookingsComponent,\r\n      },\r\n      {\r\n        path: 'completed',\r\n        component: CompletedBookingsComponent,\r\n      },\r\n      {\r\n        path: 'drafts',\r\n        component: DraftsBookingsComponent,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [BookingsComponent, OpenBookingsComponent, CompletedBookingsComponent, DraftsBookingsComponent],\r\n  imports: [\r\n    RouterModule.forChild(ROUTES),\r\n    TranslateModule,\r\n    QimaTabsModule,\r\n    QimaTabModule,\r\n    QimaTabsAutoSelectDirectiveModule,\r\n    CommonModule,\r\n    DataTableModule,\r\n  ],\r\n  exports: [BookingsComponent, OpenBookingsComponent, CompletedBookingsComponent, DraftsBookingsComponent],\r\n})\r\nexport class BookingsModule {}\r\n","export enum EPhoneValidStatus {\r\n  DANGER = 'danger',\r\n  DEFAULT = 'default',\r\n  NORMAL = 'normal',\r\n}\r\n","import { IBanner } from '@aca-new/app/pages/landing/pages/banner/shared/models/interfaces/banner.interface';\r\nimport { MARKETING_WEBSITE_APP_LINK } from '@aca-new/app/shared/constants/app.constants';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class BannerService {\r\n  public constructor(private readonly _httpClient: HttpClient) {}\r\n\r\n  public sendAppLink$(data: IBanner): Observable<HttpResponse<string>> {\r\n    return this._httpClient.post(\r\n      `${MARKETING_WEBSITE_APP_LINK}/smsMobileLink`,\r\n      { countryCode: data.countryCode, phoneNumber: data.phoneNumber, token: 'p7qWgaBTxlCaPQpz9wGI' },\r\n      { observe: 'response', responseType: 'text' }\r\n    );\r\n  }\r\n}\r\n","import { EPhoneValidStatus } from '@aca-new/app/pages/landing/pages/banner/shared/models/enums/phone-valid-status.constants';\r\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { EQimaIconName } from '@qima/ngx-qima';\r\n\r\n@Component({\r\n  selector: 'app-phone-valid',\r\n  templateUrl: './phone-valid.component.html',\r\n  styleUrls: ['./phone-valid.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PhoneValidComponent {\r\n  /**\r\n   * @description\r\n   * The error or success content\r\n   * type {string}\r\n   * @default ''\r\n   */\r\n  @Input('phoneValidContent')\r\n  public content: string = '';\r\n\r\n  /**\r\n   * @description\r\n   * The error or success status\r\n   * type {EPhoneValidStatus}\r\n   * @default EPhoneValidStatus.NORMAL\r\n   */\r\n  @Input('phoneValidStatus')\r\n  public status: EPhoneValidStatus = EPhoneValidStatus.NORMAL;\r\n\r\n  public readonly phoneIconName: EQimaIconName = EQimaIconName.ALERT;\r\n}\r\n","<div\r\n  class=\"phone-valid-message\"\r\n  [ngClass]=\"['phone-valid-message--' + status]\"\r\n>\r\n  <qima-icon\r\n    [qimaIconName]=\"phoneIconName\"\r\n    [qimaIconSize]=\"16\"\r\n  ></qima-icon>\r\n  <div class=\"qima-ml-xs content\">{{ content }}</div>\r\n</div>\r\n","<div class=\"get-mobile-app\">\r\n  <img\r\n    alt=\"banner logo\"\r\n    class=\"banner-logo\"\r\n    [src]=\"bannerLogo\"\r\n  />\r\n  <div class=\"get-mobile-app__info\">\r\n    <div class=\"title\">{{ 'APP_LANDING.BANNER.GET_APP' | translate }}</div>\r\n    <div class=\"description\">{{ 'APP_LANDING.BANNER.GET_APP_MESSAGE' | translate }}</div>\r\n  </div>\r\n  <div class=\"get-mobile-app__input-phone\">\r\n    <div class=\"get-mobile-app__input-phone__input-group\">\r\n      <qima-input-phone\r\n        class=\"input-phone\"\r\n        [formControl]=\"formControl\"\r\n        [qimaInputPhoneHasValidators]=\"inputPhoneHasValidators\"\r\n        [qimaInputPhoneSelectedCountry]=\"defaultCountry\"\r\n        [qimaInputPhoneSize]=\"inputPhoneSize\"\r\n        (qimaInputPhoneClearButtonClick)=\"onInputPhoneClear()\"\r\n      >\r\n      </qima-input-phone>\r\n\r\n      <div class=\"get-mobile-app__input-phone__input-group__button\">\r\n        <qima-button\r\n          (qimaButtonClick)=\"onSendClick()\"\r\n          [qimaButtonIsDisabled]=\"isLinkButtonDisabled\"\r\n          [qimaButtonWidth]=\"sendLinkButtonWidth\"\r\n          [qimaButtonSize]=\"sendLinkButtonSize\"\r\n          [qimaButtonLabel]=\"sendLinkButtonLabel | translate\"\r\n        ></qima-button>\r\n      </div>\r\n    </div>\r\n    <app-phone-valid\r\n      *ngIf=\"isShowPhoneValid\"\r\n      [phoneValidStatus]=\"phoneValidStatus\"\r\n      [phoneValidContent]=\"phoneValidContent\"\r\n    ></app-phone-valid>\r\n  </div>\r\n\r\n  <qima-button-icon\r\n    class=\"close-button\"\r\n    (qimaButtonIconClick)=\"onCloseClick()\"\r\n    [qimaButtonIconStyle]=\"closeButtonIconStyle\"\r\n    [qimaButtonIconName]=\"closeIconName\"\r\n    [qimaButtonIconSize]=\"closeButtonSize\"\r\n  ></qima-button-icon>\r\n</div>\r\n","import { EPhoneValidStatus } from '@aca-new/app/pages/landing/pages/banner/shared/models/enums/phone-valid-status.constants';\r\nimport { BannerService } from '@aca-new/app/pages/landing/pages/banner/shared/service/banner.service';\r\nimport { IMAGES } from '@aca-new/app/shared/constants/images.constants';\r\nimport { EStorageKeys } from '@aca-new/app/shared/models/enums/storage-keys.enum';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl } from '@ngneat/reactive-forms';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {\r\n  EQimaButtonIconStyle,\r\n  EQimaButtonSize,\r\n  EQimaButtonWidth,\r\n  EQimaIconName,\r\n  EQimaInputSize,\r\n  EQimaIsoCountryCode,\r\n  QIMA_COUNTRY_AND_AREA_ITEMS,\r\n} from '@qima/ngx-qima';\r\nimport { IQimaCountry } from '@qima/ngx-qima/models/interfaces/qima-country.interface';\r\nimport { QimaOptionalType } from '@qima/ngx-qima/models/types/qima-optional.type';\r\nimport { QimaStringBooleanType } from '@qima/ngx-qima/models/types/qima-string-boolean.type';\r\nimport { CookieService } from 'ngx-cookie';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-get-mobile-application',\r\n  templateUrl: './get-app.component.html',\r\n  styleUrls: ['./get-app.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [BannerService],\r\n})\r\nexport class GetAppComponent implements OnInit {\r\n  @Output('closeClick')\r\n  public readonly closeClick: EventEmitter<MouseEvent | Event> = new EventEmitter<MouseEvent | Event>();\r\n\r\n  public readonly closeButtonIconStyle: EQimaButtonIconStyle = EQimaButtonIconStyle.TERTIARY;\r\n  public readonly closeIconName: EQimaIconName = EQimaIconName.CLOSE;\r\n  public readonly closeButtonSize: EQimaButtonSize = EQimaButtonSize.SMALL;\r\n  public readonly sendLinkButtonWidth: EQimaButtonWidth = EQimaButtonWidth.FULL;\r\n  public readonly sendLinkButtonSize: EQimaButtonSize = EQimaButtonSize.LARGE;\r\n  public readonly sendLinkButtonLabel: string = 'APP_LANDING.BANNER.SEND_LINK';\r\n  public readonly inputPhoneSize: EQimaInputSize = EQimaInputSize.LARGE;\r\n  public readonly bannerLogo: string = IMAGES.bannerLogo;\r\n  public phoneValidContent: string = '';\r\n  public isLinkButtonDisabled: boolean = true;\r\n  public phoneValidStatus: EPhoneValidStatus = EPhoneValidStatus.NORMAL;\r\n  public isShowPhoneValid: boolean = false;\r\n\r\n  public defaultCountry: QimaOptionalType<IQimaCountry> = undefined;\r\n  public inputPhoneHasValidators: QimaOptionalType<QimaStringBooleanType> = true;\r\n  public formControl: FormControl<string> = new FormControl('');\r\n\r\n  public constructor(\r\n    private readonly _cookieStorage: CookieService,\r\n    private readonly _bannerService: BannerService,\r\n    private readonly _changeDetectorRef: ChangeDetectorRef,\r\n    private readonly _translateService: TranslateService\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.defaultCountry = QIMA_COUNTRY_AND_AREA_ITEMS.find((country: IQimaCountry): boolean => country.iso2 === EQimaIsoCountryCode.CHINA);\r\n    this.formControl.markAsDirty();\r\n    this.formControl.markAsTouched();\r\n\r\n    // eslint-disable-next-line rxjs/no-ignored-subscription\r\n    this.formControl.valueChanges.pipe(untilDestroyed(this)).subscribe((data: string): void => {\r\n      this.isLinkButtonDisabled = this.getRealPhone(data).length <= 0;\r\n    });\r\n  }\r\n\r\n  public dealWithBannerCookie(): void {\r\n    this._cookieStorage.put(EStorageKeys.SEND_MOBILE_APP_LINK, 'true');\r\n    this.closeClick.emit();\r\n  }\r\n\r\n  public onCloseClick(): void {\r\n    this.dealWithBannerCookie();\r\n  }\r\n\r\n  public getRealPhone(value: string): string {\r\n    if (value) {\r\n      return value.split(')')[1].replace(/ /g, '');\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  public onSendClick(): void {\r\n    if (this.formControl.value?.includes(')')) {\r\n      const phoneNumber: string = this.getRealPhone(this.formControl.value);\r\n\r\n      this.phoneValidStatus = EPhoneValidStatus.NORMAL;\r\n      this.phoneValidContent = this._translateService.instant('APP_LANDING.BANNER.CHECKING');\r\n      this.isShowPhoneValid = true;\r\n\r\n      this._bannerService\r\n        .sendAppLink$({ countryCode: this.defaultCountry?.dialCodes[0], phoneNumber })\r\n        .pipe(untilDestroyed(this))\r\n        // eslint-disable-next-line rxjs/no-ignored-subscription,@typescript-eslint/prefer-readonly-parameter-types\r\n        .subscribe((response: Readonly<HttpResponse<string>>): void => {\r\n          if (response.body === 'Sending') {\r\n            this.phoneValidContent = this._translateService.instant('APP_LANDING.BANNER.LINK_SENT', { mobileNumber: phoneNumber });\r\n            this.dealWithBannerCookie();\r\n\r\n            return;\r\n          }\r\n\r\n          this.phoneValidStatus = EPhoneValidStatus.DANGER;\r\n          this.phoneValidContent = response.body || '';\r\n\r\n          this._changeDetectorRef.markForCheck();\r\n        });\r\n    }\r\n  }\r\n\r\n  public onInputPhoneClear(): void {\r\n    this.isShowPhoneValid = false;\r\n    this.phoneValidContent = '';\r\n    this.phoneValidStatus = EPhoneValidStatus.NORMAL;\r\n    this.isLinkButtonDisabled = true;\r\n  }\r\n}\r\n","<div class=\"app-banner\">\r\n  <app-get-mobile-application\r\n    *ngIf=\"isShowGetApp\"\r\n    (closeClick)=\"closeClick()\"\r\n  ></app-get-mobile-application>\r\n  <h5 class=\"qima-h5\">{{ 'APP_LANDING.BANNER.HELLO' | translate }}</h5>\r\n  <h3 class=\"qima-h3\">{{ currentUser?.sic }}</h3>\r\n</div>\r\n","import { IUser } from '@aca-new/app/pages/user/shared/models/interfaces/user.interface';\r\nimport { EStorageKeys } from '@aca-new/app/shared/models/enums/storage-keys.enum';\r\nimport { AuthenticationService } from '@aca-new/app/shared/services/authentication.service';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie';\r\n\r\n@Component({\r\n  selector: 'app-banner',\r\n  templateUrl: './banner.component.html',\r\n  styleUrls: ['./banner.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class BannerComponent {\r\n  public readonly currentUser: IUser = this._authenticationService.getCurrentUser();\r\n  public isShowGetApp = this._getBannerStatus();\r\n  public constructor(private readonly _cookieStorage: CookieService, private readonly _authenticationService: AuthenticationService) {}\r\n\r\n  public closeClick(): void {\r\n    this.isShowGetApp = this._getBannerStatus();\r\n  }\r\n\r\n  private _getBannerStatus(): boolean {\r\n    return !this._cookieStorage.get(EStorageKeys.SEND_MOBILE_APP_LINK);\r\n  }\r\n}\r\n","import { ETableDataType } from '@aca-new/app/shared/components/table/shared/enums/table-data-type.enum';\r\nimport { ITableHeader } from '@aca-new/app/shared/components/table/shared/interfaces/table-header.interface';\r\nimport { EQimaTableHeadCellSort } from '@qima/ngx-qima';\r\n\r\nconst COMMON_HEADERS: ITableHeader[] = [\r\n  {\r\n    isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n    key: 'serviceDate',\r\n    label: 'TABLE.SERVICE_DATE',\r\n    type: ETableDataType.STRING,\r\n  },\r\n  {\r\n    isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n    key: 'serviceTypeText',\r\n    label: 'TABLE.SERVICE_TYPE',\r\n    type: ETableDataType.STRING,\r\n  },\r\n  {\r\n    isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n    key: 'productNames',\r\n    label: 'TABLE.PRODUCT_NAME',\r\n    type: ETableDataType.STRING,\r\n  },\r\n  {\r\n    isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n    key: 'poNumbers',\r\n    label: 'TABLE.PO_NO',\r\n    type: ETableDataType.STRING,\r\n  },\r\n  {\r\n    isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n    key: 'refNumber',\r\n    label: 'TABLE.REF_NO',\r\n    type: ETableDataType.STRING,\r\n  },\r\n  {\r\n    isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n    key: 'supplierName',\r\n    label: 'TABLE.SUPPLIER',\r\n    type: ETableDataType.STRING,\r\n  },\r\n];\r\n\r\nexport const UPCOMING_ORDERS_TABLE_ID = {\r\n  auditsUpcoming: 'audits_upcoming',\r\n  inspectionsUpcoming: 'inspections_upcoming',\r\n  labTestingUpcoming: 'lab_testing_upcoming',\r\n  certificationUpcoming: 'certification_upcoming',\r\n};\r\n\r\nexport const UPCOMING_ORDERS_TABLE_HEADERS: Record<string, ITableHeader[]> = {\r\n  [UPCOMING_ORDERS_TABLE_ID.auditsUpcoming]: COMMON_HEADERS,\r\n  [UPCOMING_ORDERS_TABLE_ID.inspectionsUpcoming]: COMMON_HEADERS,\r\n  [UPCOMING_ORDERS_TABLE_ID.labTestingUpcoming]: COMMON_HEADERS,\r\n  [UPCOMING_ORDERS_TABLE_ID.certificationUpcoming]: [\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'typeText',\r\n      label: 'TABLE.TYPE',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'subCategory',\r\n      label: 'TABLE.BOOKING_TYPE',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'subInfo',\r\n      label: 'TABLE.SUB_INFO',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'clientRefNo',\r\n      label: 'TABLE.CLIENT_REF_NO',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'productName',\r\n      label: 'TABLE.PRODUCT_NAME',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'orderNumber',\r\n      label: 'TABLE.REF_NO',\r\n      type: ETableDataType.STRING,\r\n    },\r\n  ],\r\n};\r\n","<app-data-table\r\n  *ngIf=\"shouldUpcomingTable\"\r\n  (dataTableToolbarSelectChange)=\"upcomingSelectChange($event)\"\r\n  [dataTableSelectActive]=\"upcomingSelectActive\"\r\n  [dataTableApiUrl]=\"upcomingApiUrl\"\r\n  [dataTableTitle]=\"'UPCOMING_ORDERS.TITLE' | translate\"\r\n  [dataTableHeaders]=\"upcomingTableHeaders\"\r\n  [dataTableIcon]=\"upcomingIcon\"\r\n  [dataTableSelects]=\"upcomingTableSelects\"\r\n  [dataTableEmptyMessage]=\"'UPCOMING_ORDERS.UPCOMING_NO_DATA' | translate\"\r\n  [dataTableIsShowMore]=\"true\"\r\n></app-data-table>\r\n","import {\r\n  UPCOMING_ORDERS_TABLE_HEADERS,\r\n  UPCOMING_ORDERS_TABLE_ID,\r\n} from '@aca-new/app/pages/landing/pages/upcoming-orders/shared/constants/upcoming-orders-table.constants';\r\nimport { IDataTableSelect } from '@aca-new/app/pages/landing/shared/models/interfaces/data-table-select.interface';\r\nimport { IUser } from '@aca-new/app/pages/user/shared/models/interfaces/user.interface';\r\nimport { ITableHeader } from '@aca-new/app/shared/components/table/shared/interfaces/table-header.interface';\r\nimport { SERVER_API_URL } from '@aca-new/app/shared/constants/app.constants';\r\nimport { IMAGES } from '@aca-new/app/shared/constants/images.constants';\r\nimport { EStorageKeys } from '@aca-new/app/shared/models/enums/storage-keys.enum';\r\nimport { AuthenticationService } from '@aca-new/app/shared/services/authentication.service';\r\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-upcoming-orders',\r\n  templateUrl: './upcoming-orders.component.html',\r\n  styleUrls: ['./upcoming-orders.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UpcomingOrdersComponent implements OnInit {\r\n  public readonly upcomingIcon: string = IMAGES.upcomingIcon;\r\n  public readonly userData: IUser = this._authenticationService.getCurrentUser();\r\n  public readonly userId = sessionStorage.getItem(EStorageKeys.USER_ID);\r\n  public shouldUpcomingTable = false;\r\n  public upcomingApiUrl: string = '';\r\n  public upcomingSelectActive: string = '';\r\n  public upcomingTableHeaders: ITableHeader[] = [];\r\n\r\n  public readonly upcomingTableSelects: IDataTableSelect[] = [\r\n    {\r\n      label: 'UPCOMING_ORDERS.SELECT.INSPECTIONS',\r\n      value: UPCOMING_ORDERS_TABLE_ID.inspectionsUpcoming,\r\n    },\r\n    {\r\n      label: 'UPCOMING_ORDERS.SELECT.LAB_TESTING',\r\n      value: UPCOMING_ORDERS_TABLE_ID.labTestingUpcoming,\r\n    },\r\n    {\r\n      label: 'UPCOMING_ORDERS.SELECT.CERTIFICATIONS',\r\n      value: UPCOMING_ORDERS_TABLE_ID.certificationUpcoming,\r\n    },\r\n    {\r\n      label: 'UPCOMING_ORDERS.SELECT.AUDITS',\r\n      value: UPCOMING_ORDERS_TABLE_ID.auditsUpcoming,\r\n    },\r\n  ];\r\n\r\n  public readonly upcomingApiUrls: Record<string, string> = {\r\n    [UPCOMING_ORDERS_TABLE_ID.auditsUpcoming]: `${SERVER_API_URL}/user/${this.userId}/audit-orders?status=${encodeURIComponent(\r\n      '15,17,20,22,23,25,30,40,50'\r\n    )}&page-size=5&page=1`,\r\n    [UPCOMING_ORDERS_TABLE_ID.inspectionsUpcoming]: `${SERVER_API_URL}/user/${this.userId}/psi-orders?status=${encodeURIComponent(\r\n      '15,17,20,22,23,25,30,40,50'\r\n    )}&page-size=5&page=1`,\r\n    [UPCOMING_ORDERS_TABLE_ID.labTestingUpcoming]: `${SERVER_API_URL}/user/${this.userId}/lt/orders?orderStatus=${encodeURIComponent(\r\n      '20,21,22,23,24,25'\r\n    )}&pageNumber=1&pageSize=5`,\r\n    [UPCOMING_ORDERS_TABLE_ID.certificationUpcoming]: `${SERVER_API_URL}/user/${\r\n      this.userId\r\n    }/certification-orders?status=${encodeURIComponent('10,15,17,20,21,22,23,25,30,40,50,56')}&pageNumber=1&pageSize=5`,\r\n  };\r\n\r\n  public constructor(private readonly _authenticationService: AuthenticationService) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.shouldUpcomingTable = !this.userData?.features?.viewReportsOnly;\r\n    // init\r\n    this.upcomingSelectActive = UPCOMING_ORDERS_TABLE_ID.inspectionsUpcoming;\r\n    this.upcomingTableHeaders = UPCOMING_ORDERS_TABLE_HEADERS.inspections_upcoming;\r\n    this.upcomingApiUrl = this.upcomingApiUrls.inspections_upcoming;\r\n  }\r\n\r\n  public upcomingSelectChange(id: Readonly<string>): void {\r\n    this.upcomingApiUrl = this.upcomingApiUrls[id];\r\n    this.upcomingTableHeaders = UPCOMING_ORDERS_TABLE_HEADERS[id];\r\n  }\r\n}\r\n","import { ETableDataType } from '@aca-new/app/shared/components/table/shared/enums/table-data-type.enum';\r\nimport { ITableHeader } from '@aca-new/app/shared/components/table/shared/interfaces/table-header.interface';\r\nimport { EQimaTableHeadCellSort } from '@qima/ngx-qima';\r\n\r\nexport const LATEST_REPORTS_TABLE_ID = {\r\n  auditsReport: 'audits_report',\r\n  inspectionsReport: 'inspections_report',\r\n  labTestingReport: 'lab_testing_report',\r\n};\r\n\r\nexport const LATEST_REPORTS_TABLE_HEADERS: Record<string, ITableHeader[]> = {\r\n  [LATEST_REPORTS_TABLE_ID.auditsReport]: [\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'auditDate',\r\n      label: 'TABLE.SERVICE_DATE',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'auditType',\r\n      label: 'TABLE.SERVICE_TYPE',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'clientReference',\r\n      label: 'TABLE.PRODUCT_NAME',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'poNumber',\r\n      label: 'TABLE.PO_NO',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'orderNumber',\r\n      label: 'TABLE.REF_NO',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'reportCoverOverAllScore',\r\n      label: 'TABLE.RESULT',\r\n      type: ETableDataType.STRING,\r\n    },\r\n  ],\r\n  [LATEST_REPORTS_TABLE_ID.inspectionsReport]: [\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'inspectionDateMMMFormat',\r\n      label: 'TABLE.SERVICE_DATE',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'serviceTypeText',\r\n      label: 'TABLE.SERVICE_TYPE',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'productName',\r\n      label: 'TABLE.PO_NO',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'poNumber',\r\n      label: 'TABLE.PRODUCT_NAME',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'orderNumber',\r\n      label: 'TABLE.REF_NO',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'overrallresultult',\r\n      label: 'TABLE.RESULT',\r\n      type: ETableDataType.STRING,\r\n    },\r\n  ],\r\n  [LATEST_REPORTS_TABLE_ID.labTestingReport]: [\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'reportIssuedDate',\r\n      label: 'TABLE.SERVICE_DATE',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'serviceType',\r\n      label: 'TABLE.SERVICE_TYPE',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'productName',\r\n      label: 'TABLE.PRODUCT_NAME',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'clientPONo',\r\n      label: 'TABLE.PO_NO',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'labOrderno',\r\n      label: 'TABLE.REF_NO',\r\n      type: ETableDataType.STRING,\r\n    },\r\n    {\r\n      isSort: EQimaTableHeadCellSort.ALPHABETICALLY,\r\n      key: 'overallRating',\r\n      label: 'TABLE.RESULT',\r\n      type: ETableDataType.STRING,\r\n    },\r\n  ],\r\n};\r\n","<app-data-table\r\n  *ngIf=\"shouldReportTable\"\r\n  (dataTableToolbarSelectChange)=\"reportSelectChange($event)\"\r\n  [dataTableSelectActive]=\"lastReportsSelectActive\"\r\n  [dataTableSourceDataConvertTableData]=\"sourceDataConvertTableData\"\r\n  [dataTableApiUrl]=\"reportApiUrl\"\r\n  [dataTableTitle]=\"'LATEST_REPORTS.TITLE' | translate\"\r\n  [dataTableHeaders]=\"reportTableHeaders\"\r\n  [dataTableIcon]=\"reportIcon\"\r\n  [dataTableSelects]=\"reportTableSelects\"\r\n  [dataTableEmptyMessage]=\"'LATEST_REPORTS.REPORT_NO_DATA' | translate\"\r\n  [dataTableIsShowMore]=\"true\"\r\n></app-data-table>\r\n","import {\r\n  LATEST_REPORTS_TABLE_HEADERS,\r\n  LATEST_REPORTS_TABLE_ID,\r\n} from '@aca-new/app/pages/landing/pages/latest-reports/shared/constants/latest-reports-table.constants';\r\nimport { IDataTableSelect } from '@aca-new/app/pages/landing/shared/models/interfaces/data-table-select.interface';\r\nimport { IDataTableData, PageItemType } from '@aca-new/app/shared/components/data-table/shared/models/interfaces/data-table-data.interface';\r\nimport { ETableDataType } from '@aca-new/app/shared/components/table/shared/enums/table-data-type.enum';\r\nimport { ITableData } from '@aca-new/app/shared/components/table/shared/interfaces/table-data.interface';\r\nimport { ITableHeader } from '@aca-new/app/shared/components/table/shared/interfaces/table-header.interface';\r\nimport { SERVER_API_URL } from '@aca-new/app/shared/constants/app.constants';\r\nimport { IMAGES } from '@aca-new/app/shared/constants/images.constants';\r\nimport { EStorageKeys } from '@aca-new/app/shared/models/enums/storage-keys.enum';\r\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { QimaOptionalType } from '@qima/ngx-qima/models/types/qima-optional.type';\r\n\r\n@Component({\r\n  selector: 'app-latest-reports',\r\n  templateUrl: './latest-reports.component.html',\r\n  styleUrls: ['./latest-reports.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LatestReportsComponent implements OnInit {\r\n  public readonly reportIcon: string = IMAGES.reportIcon;\r\n  public userId = sessionStorage.getItem(EStorageKeys.USER_ID);\r\n  public shouldReportTable = false;\r\n  public reportApiUrl: string = '';\r\n  public lastReportsSelectActive: string = '';\r\n  public reportTableHeaders: ITableHeader[] = [];\r\n  // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n  public sourceDataConvertTableData: QimaOptionalType<(source: Readonly<IDataTableData>, headers: ITableHeader[]) => ITableData[][]> =\r\n    undefined;\r\n\r\n  public readonly reportTableSelects: IDataTableSelect[] = [\r\n    {\r\n      label: 'LATEST_REPORTS.SELECT.INSPECTIONS',\r\n      value: LATEST_REPORTS_TABLE_ID.inspectionsReport,\r\n    },\r\n    {\r\n      label: 'LATEST_REPORTS.SELECT.LAB_TESTING',\r\n      value: LATEST_REPORTS_TABLE_ID.labTestingReport,\r\n    },\r\n    {\r\n      label: 'LATEST_REPORTS.SELECT.AUDITS',\r\n      value: LATEST_REPORTS_TABLE_ID.auditsReport,\r\n    },\r\n  ];\r\n\r\n  public readonly reportApiUrls: Record<string, string> = {\r\n    [LATEST_REPORTS_TABLE_ID.inspectionsReport]: `${SERVER_API_URL}/user/${this.userId}/reports?page-size=5&page=1&sortType=desc&sortField=inspectionDate`,\r\n    [LATEST_REPORTS_TABLE_ID.labTestingReport]: `${SERVER_API_URL}/user/${\r\n      this.userId\r\n    }/lt/reports?pageSize=5&pageNumber=1&sampleArrivedDateFrom=${this.getDateRange('today')}&sampleArrivedDateTo=${this.getDateRange(\r\n      'next-year'\r\n    )}`,\r\n    [LATEST_REPORTS_TABLE_ID.auditsReport]: `${SERVER_API_URL}/user/${this.userId}/audit-reports?page-size=5&page=1&sortType=desc&sortField=AUDIT_DATE`,\r\n  };\r\n\r\n  public ngOnInit(): void {\r\n    // TODO handle the access show report table\r\n    // const userData = JSON.parse(sessionStorage.getItem(EStorageKeys.USER_DATA) || '{}');\r\n    // this.shouldReportTable = userData?.company?.extraAccess?.canSeeReportsPage;\r\n    this.shouldReportTable = true;\r\n    // init\r\n    this.lastReportsSelectActive = LATEST_REPORTS_TABLE_ID.inspectionsReport;\r\n    this.reportApiUrl = this.reportApiUrls.inspections_report;\r\n    this.reportTableHeaders = LATEST_REPORTS_TABLE_HEADERS.inspections_report;\r\n  }\r\n\r\n  public getDateRange(type: string): string {\r\n    let date;\r\n\r\n    if (type === 'today') {\r\n      date = new Date();\r\n    } else {\r\n      // 1 full year from now\r\n      date = new Date(new Date().setFullYear(new Date().getFullYear() + 1));\r\n    }\r\n\r\n    return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\r\n  }\r\n\r\n  public reportSelectChange(id: Readonly<string>): void {\r\n    this.reportApiUrl = this.reportApiUrls[id];\r\n    this.reportTableHeaders = LATEST_REPORTS_TABLE_HEADERS[id];\r\n\r\n    if (id === LATEST_REPORTS_TABLE_ID.labTestingReport) {\r\n      this.sourceDataConvertTableData = this.sourceDataConvertTableDataForLabTesting;\r\n    } else {\r\n      this.sourceDataConvertTableData = undefined;\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n  public sourceDataConvertTableDataForLabTesting(source: Readonly<IDataTableData>, headers: Readonly<ITableHeader[]>): ITableData[][] {\r\n    const tableData: ITableData[][] = [];\r\n\r\n    if (source.pageItems.length) {\r\n      source.pageItems.forEach((pageItem): void => {\r\n        const rowData: ITableData[] = [];\r\n\r\n        headers?.forEach((head: ITableHeader): void => {\r\n          const cellData: ITableData = {\r\n            type: ETableDataType.STRING,\r\n          };\r\n\r\n          cellData.type = head.type;\r\n\r\n          switch (cellData.type) {\r\n            case ETableDataType.STRING:\r\n              cellData.label = (pageItem.order as Record<string, PageItemType>)[head.key] as string;\r\n          }\r\n\r\n          rowData.push(cellData);\r\n        });\r\n\r\n        tableData.push(rowData);\r\n      });\r\n    }\r\n\r\n    return tableData;\r\n  }\r\n}\r\n","/* eslint-disable no-magic-numbers */\r\nexport enum EAccountSummaryStatus {\r\n  DANGER = 'danger',\r\n  DEFAULT = 'default',\r\n  NORMAL = 'normal',\r\n}\r\n","import { ACCOUNT_SUMMARY } from '@aca-new/app/pages/landing/pages/account-summary/shared/constants/account-summary.constants';\r\nimport { EAccountSummaryStatus } from '@aca-new/app/pages/landing/pages/account-summary/shared/models/enums/account-summary-status.constants';\r\nimport { formatPercent } from '@angular/common';\r\n\r\nexport class AccountSummaryData {\r\n  public content: string = '';\r\n  public status: EAccountSummaryStatus = EAccountSummaryStatus.DEFAULT;\r\n\r\n  public constructor(value: number, threshold?: number) {\r\n    this.content = value.toString();\r\n\r\n    if (threshold) {\r\n      this.status = value <= threshold ? EAccountSummaryStatus.DANGER : EAccountSummaryStatus.NORMAL;\r\n    }\r\n  }\r\n}\r\n\r\nexport class AccountSummaryPercentageData extends AccountSummaryData {\r\n  public constructor(value: number, local: string, threshold?: number) {\r\n    super(value, threshold);\r\n    this.content = formatPercent(value, local);\r\n  }\r\n}\r\n\r\nexport class AccountSummaryCurrencyData extends AccountSummaryData {\r\n  public constructor(value: number, threshold?: number) {\r\n    super(value, threshold);\r\n    // eslint-disable-next-line no-magic-numbers\r\n    this.content = `${ACCOUNT_SUMMARY.prefixUsd} ${value.toFixed(3)}`;\r\n  }\r\n}\r\n","import { IAccountSummary } from '@aca-new/app/pages/landing/pages/account-summary/shared/service/models/interfaces/account-summary.interface';\r\nimport { SERVER_API_URL } from '@aca-new/app/shared/constants/app.constants';\r\nimport { EStorageKeys } from '@aca-new/app/shared/models/enums/storage-keys.enum';\r\nimport { IHttpResponseBody } from '@aca-new/app/shared/models/interfaces/http-response-body.interface';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AccountSummaryService {\r\n  public constructor(private readonly _httpClient: HttpClient) {}\r\n\r\n  public getDateRange(type?: string): string {\r\n    let date;\r\n\r\n    if (type === 'today') {\r\n      date = new Date();\r\n    } else {\r\n      // 1  full year before now\r\n      date = new Date(new Date().setFullYear(new Date().getFullYear() - 1));\r\n    }\r\n\r\n    return `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\r\n  }\r\n\r\n  public getAccountSummaryData$(): Observable<IAccountSummary | null> {\r\n    const userId = sessionStorage.getItem(EStorageKeys.USER_ID);\r\n\r\n    return this._httpClient\r\n      .get<IHttpResponseBody<IAccountSummary>>(\r\n        `${SERVER_API_URL}/user/${userId}/dashboard-overview?startDate=${this.getDateRange()}&endDate=${this.getDateRange('today')}`,\r\n        { observe: 'response' }\r\n      )\r\n      .pipe(\r\n        map(\r\n          // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n          (response: Readonly<HttpResponse<IHttpResponseBody<IAccountSummary>>>): IAccountSummary | null => response?.body?.content || null\r\n        )\r\n      );\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { QimaOptionalType } from '@qima/ngx-qima';\r\n\r\n@Component({\r\n  selector: 'app-account-summary-card',\r\n  templateUrl: './account-summary-card.component.html',\r\n  styleUrls: ['./account-summary-card.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AccountSummaryCardComponent {\r\n  /**\r\n   * @description\r\n   * The content of the account summary\r\n   * type {string}\r\n   * @default ''\r\n   */\r\n  @Input('accountSummaryContent')\r\n  public content: QimaOptionalType<string> = '';\r\n\r\n  /**\r\n   * @description\r\n   * The status of the account summary\r\n   * type {string}\r\n   * @default ''\r\n   */\r\n  @Input('accountSummaryStatus')\r\n  public status: QimaOptionalType<string> = '';\r\n\r\n  /**\r\n   * @description\r\n   * The description of the account summary\r\n   * type {string}\r\n   * @default ''\r\n   */\r\n  @Input('accountSummaryDescription')\r\n  public description: string = '';\r\n}\r\n","<div\r\n  class=\"account-summary-card\"\r\n  [ngClass]=\"['account-summary-card--' + status]\"\r\n>\r\n  <div class=\"content\">{{ content }}</div>\r\n  <div\r\n    class=\"description\"\r\n    [innerHTML]=\"description\"\r\n  ></div>\r\n</div>\r\n","<div class=\"account-summary\">\r\n  <div class=\"title\">{{ 'APP_LANDING.ACCOUNT_SUMMARY.TITLE' | translate }}</div>\r\n\r\n  <qima-divider\r\n    class=\"divider\"\r\n    [qimaDividerOrientation]=\"horizontal\"\r\n  ></qima-divider>\r\n\r\n  <div\r\n    class=\"account-summary--empty\"\r\n    *ngIf=\"!hasAccountSummaryContent\"\r\n  >\r\n    <div class=\"empty-text\">{{ 'APP_LANDING.ACCOUNT_SUMMARY.NO_DATA_TEXT' | translate }}</div>\r\n\r\n    <qima-button\r\n      [qimaButtonLabel]=\"'APP_LANDING.ACCOUNT_SUMMARY.BOOKING_NOW' | translate\"\r\n      [qimaButtonSize]=\"bookingButtonSize\"\r\n      [qimaButtonStyle]=\"bookingButtonStyle\"\r\n    ></qima-button>\r\n  </div>\r\n\r\n  <ng-template [ngIf]=\"hasAccountSummaryContent\">\r\n    <div class=\"account-summary__inspection\">\r\n      <app-account-summary-card\r\n        [accountSummaryContent]=\"inspectionOrdersCompleted?.content\"\r\n        [accountSummaryStatus]=\"inspectionOrdersCompleted?.status\"\r\n        [accountSummaryDescription]=\"'APP_LANDING.ACCOUNT_SUMMARY.SUPPLIER_INSPECTED' | translate\"\r\n      ></app-account-summary-card>\r\n      <app-account-summary-card\r\n        [accountSummaryContent]=\"inspectionSupplierVisited?.content\"\r\n        [accountSummaryStatus]=\"inspectionSupplierVisited?.status\"\r\n        [accountSummaryDescription]=\"'APP_LANDING.ACCOUNT_SUMMARY.SUPPLIER_COMPLETED' | translate\"\r\n      ></app-account-summary-card>\r\n    </div>\r\n\r\n    <app-account-summary-card\r\n      [accountSummaryContent]=\"inspectionAvgCost?.content\"\r\n      [accountSummaryStatus]=\"inspectionAvgCost?.status\"\r\n      [accountSummaryDescription]=\"'APP_LANDING.ACCOUNT_SUMMARY.AVG_INSPECTION_COST' | translate\"\r\n    ></app-account-summary-card>\r\n\r\n    <app-account-summary-card\r\n      [accountSummaryContent]=\"inspectionBeyondAQLRate?.content\"\r\n      [accountSummaryStatus]=\"inspectionBeyondAQLRate?.status\"\r\n      [accountSummaryDescription]=\"'APP_LANDING.ACCOUNT_SUMMARY.BEYOND_AQL_RATE' | translate\"\r\n    ></app-account-summary-card>\r\n\r\n    <app-account-summary-card\r\n      [accountSummaryContent]=\"inspectionServiceLevel?.content\"\r\n      [accountSummaryStatus]=\"inspectionServiceLevel?.status\"\r\n      [accountSummaryDescription]=\"'APP_LANDING.ACCOUNT_SUMMARY.SERVICE_LEVEL' | translate\"\r\n    ></app-account-summary-card>\r\n\r\n    <app-account-summary-card\r\n      [accountSummaryContent]=\"inspectionRejectionRate?.content\"\r\n      [accountSummaryStatus]=\"inspectionRejectionRate?.status\"\r\n      [accountSummaryDescription]=\"'APP_LANDING.ACCOUNT_SUMMARY.REPORT_REJECT_RATE' | translate\"\r\n    ></app-account-summary-card>\r\n  </ng-template>\r\n</div>\r\n","import { ACCOUNT_SUMMARY } from '@aca-new/app/pages/landing/pages/account-summary/shared/constants/account-summary.constants';\r\nimport {\r\n  AccountSummaryCurrencyData,\r\n  AccountSummaryData,\r\n  AccountSummaryPercentageData,\r\n} from '@aca-new/app/pages/landing/pages/account-summary/shared/models/classes/account-summary-data.class';\r\nimport { AccountSummaryService } from '@aca-new/app/pages/landing/pages/account-summary/shared/service/account-summary.service';\r\nimport { IAccountSummaryCard } from '@aca-new/app/pages/landing/pages/account-summary/shared/service/models/interfaces/account-summary-card.interface';\r\nimport { IAccountSummary } from '@aca-new/app/pages/landing/pages/account-summary/shared/service/models/interfaces/account-summary.interface';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, LOCALE_ID, OnInit } from '@angular/core';\r\nimport { untilDestroyed, UntilDestroy } from '@ngneat/until-destroy';\r\nimport { EQimaButtonSize, EQimaButtonStyle, EQimaDividerOrientation, QimaOptionalType } from '@qima/ngx-qima';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-account-summary',\r\n  templateUrl: './account-summary.component.html',\r\n  styleUrls: ['./account-summary.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [AccountSummaryService],\r\n})\r\nexport class AccountSummaryComponent implements OnInit {\r\n  public horizontal: EQimaDividerOrientation = EQimaDividerOrientation.HORIZONTAL;\r\n  public bookingButtonSize: EQimaButtonSize = EQimaButtonSize.SMALL;\r\n  public bookingButtonStyle: EQimaButtonStyle = EQimaButtonStyle.SECONDARY;\r\n  public hasAccountSummaryContent: boolean = false;\r\n  public accountSummary: IAccountSummary = {\r\n    inspectionOrdersCompleted: 0,\r\n    inspectionSupplierVisited: 0,\r\n    inspectionAvgCost: 0,\r\n    inspectionBeyondAQLRate: 0,\r\n    inspectionServiceLevel: 0,\r\n    inspectionRejectionRate: 0,\r\n  };\r\n\r\n  public inspectionOrdersCompleted: QimaOptionalType<IAccountSummaryCard> = undefined;\r\n  public inspectionSupplierVisited: QimaOptionalType<IAccountSummaryCard> = undefined;\r\n  public inspectionAvgCost: QimaOptionalType<IAccountSummaryCard> = undefined;\r\n  public inspectionBeyondAQLRate: QimaOptionalType<IAccountSummaryCard> = undefined;\r\n  public inspectionServiceLevel: QimaOptionalType<IAccountSummaryCard> = undefined;\r\n  public inspectionRejectionRate: QimaOptionalType<IAccountSummaryCard> = undefined;\r\n\r\n  public constructor(\r\n    private readonly _accountSummaryService: AccountSummaryService,\r\n    private readonly _changeDetectorRef: ChangeDetectorRef,\r\n    @Inject(LOCALE_ID) public locale: string\r\n  ) {}\r\n\r\n  public getAccountSummaryStatus(accountSummary: IAccountSummary): void {\r\n    this.hasAccountSummaryContent = ![\r\n      accountSummary.inspectionOrdersCompleted,\r\n      accountSummary.inspectionSupplierVisited,\r\n      accountSummary.inspectionAvgCost,\r\n      accountSummary.inspectionBeyondAQLRate,\r\n      accountSummary.inspectionServiceLevel,\r\n      accountSummary.inspectionRejectionRate,\r\n    ].every((item: number): boolean => item === 0);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this._accountSummaryService\r\n      .getAccountSummaryData$()\r\n      .pipe(untilDestroyed(this))\r\n      // eslint-disable-next-line rxjs/no-ignored-subscription\r\n      .subscribe((accountSummary: QimaOptionalType<IAccountSummary>): void => {\r\n        if (accountSummary) {\r\n          this.accountSummary = accountSummary;\r\n          this.getAccountSummaryStatus(accountSummary);\r\n          this.inspectionOrdersCompleted = new AccountSummaryData(accountSummary.inspectionOrdersCompleted);\r\n          this.inspectionSupplierVisited = new AccountSummaryData(accountSummary.inspectionSupplierVisited);\r\n          this.inspectionAvgCost = new AccountSummaryCurrencyData(accountSummary.inspectionAvgCost);\r\n\r\n          this.inspectionBeyondAQLRate = new AccountSummaryPercentageData(\r\n            accountSummary.inspectionBeyondAQLRate,\r\n            this.locale,\r\n            ACCOUNT_SUMMARY.threshold30\r\n          );\r\n\r\n          this.inspectionServiceLevel = new AccountSummaryPercentageData(\r\n            accountSummary.inspectionServiceLevel,\r\n\r\n            this.locale,\r\n            ACCOUNT_SUMMARY.threshold30\r\n          );\r\n\r\n          this.inspectionRejectionRate = new AccountSummaryPercentageData(\r\n            accountSummary.inspectionRejectionRate,\r\n            this.locale,\r\n            ACCOUNT_SUMMARY.threshold50\r\n          );\r\n\r\n          this._changeDetectorRef.detectChanges();\r\n        }\r\n      });\r\n  }\r\n}\r\n","/* eslint-disable no-magic-numbers */\r\nexport const ACCOUNT_SUMMARY = {\r\n  threshold30: 30,\r\n  threshold50: 50,\r\n  prefixUsd: 'USD ',\r\n};\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LandingComponent {}\r\n","<div class=\"landing\">\r\n  <app-banner></app-banner>\r\n  <div class=\"landing__body\">\r\n    <div class=\"landing__body__content\">\r\n      <div class=\"table-container\">\r\n        <app-upcoming-orders></app-upcoming-orders>\r\n      </div>\r\n      <div class=\"table-container\">\r\n        <app-latest-reports></app-latest-reports>\r\n      </div>\r\n    </div>\r\n    <app-account-summary></app-account-summary>\r\n  </div>\r\n</div>\r\n","import { LandingComponent } from './landing.component';\r\nimport { AccountSummaryComponent } from '@aca-new/app/pages/landing/pages/account-summary/account-summary.component';\r\nimport { AccountSummaryCardComponent } from '@aca-new/app/pages/landing/pages/account-summary/shared/components/account-summary-card/account-summary-card.component';\r\nimport { BannerComponent } from '@aca-new/app/pages/landing/pages/banner/banner.component';\r\nimport { GetAppComponent } from '@aca-new/app/pages/landing/pages/banner/shared/component/get-app/get-app.component';\r\nimport { PhoneValidComponent } from '@aca-new/app/pages/landing/pages/banner/shared/component/phone-valid/phone-valid.component';\r\nimport { LatestReportsComponent } from '@aca-new/app/pages/landing/pages/latest-reports/latest-reports.component';\r\nimport { UpcomingOrdersComponent } from '@aca-new/app/pages/landing/pages/upcoming-orders/upcoming-orders.component';\r\nimport { DataTableModule } from '@aca-new/app/shared/components/data-table/data-table.module';\r\nimport { AuthoritiesGuard } from '@aca-new/app/shared/guards/authorities/authorities.guard';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport {\r\n  QimaDividerModule,\r\n  QimaInputSelectModule,\r\n  QimaMenuModule,\r\n  QimaMenuItemTextModule,\r\n  QimaIconModule,\r\n  QimaButtonModule,\r\n  QimaButtonIconModule,\r\n  QimaInputPhoneModule,\r\n} from '@qima/ngx-qima';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: LandingComponent,\r\n    canActivate: [AuthoritiesGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LandingComponent,\r\n    AccountSummaryComponent,\r\n    AccountSummaryCardComponent,\r\n    UpcomingOrdersComponent,\r\n    LatestReportsComponent,\r\n    BannerComponent,\r\n    GetAppComponent,\r\n    PhoneValidComponent,\r\n  ],\r\n  imports: [\r\n    RouterModule.forChild(ROUTES),\r\n    TranslateModule,\r\n    QimaDividerModule,\r\n    QimaInputSelectModule,\r\n    QimaMenuItemTextModule,\r\n    FormsModule,\r\n    QimaMenuModule,\r\n    QimaIconModule,\r\n    CommonModule,\r\n    QimaButtonModule,\r\n    DataTableModule,\r\n    QimaButtonModule,\r\n    QimaButtonIconModule,\r\n    QimaInputPhoneModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  exports: [LandingComponent, AccountSummaryComponent, AccountSummaryCardComponent, UpcomingOrdersComponent, LatestReportsComponent],\r\n})\r\nexport class LandingModule {}\r\n","import { IUser } from '@aca-new/app/pages/user/shared/models/interfaces/user.interface';\r\nimport { SERVER_API_URL } from '@aca-new/app/shared/constants/app.constants';\r\nimport { IHttpResponseBody } from '@aca-new/app/shared/models/interfaces/http-response-body.interface';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  public constructor(private readonly _httpClient: HttpClient) {}\r\n\r\n  public getUserById$(userId: string): Observable<IUser | null> {\r\n    return (\r\n      this._httpClient\r\n        .get<IHttpResponseBody<IUser>>(`${SERVER_API_URL}/user/v2/${userId}`, { observe: 'response' })\r\n        // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n        .pipe(map((response: Readonly<HttpResponse<IHttpResponseBody<IUser>>>): IUser | null => response?.body?.content || null))\r\n    );\r\n  }\r\n}\r\n","import { IUser } from '@aca-new/app/pages/user/shared/models/interfaces/user.interface';\r\nimport { UserService } from '@aca-new/app/pages/user/shared/service/user.service';\r\nimport { EStorageKeys } from '@aca-new/app/shared/models/enums/storage-keys.enum';\r\nimport { AuthenticationService } from '@aca-new/app/shared/services/authentication.service';\r\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { CookieService } from 'ngx-cookie';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [UserService],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public userId: string = '';\r\n  public token: string = '';\r\n\r\n  public constructor(\r\n    private readonly _userService: UserService,\r\n    private readonly _authenticationService: AuthenticationService,\r\n    private readonly _activatedRoute: ActivatedRoute,\r\n    private readonly _cookieStorage: CookieService,\r\n    private readonly _router: Router\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    this._getAuthInfoByRoute();\r\n    this._getUserData();\r\n  }\r\n\r\n  private _getAuthInfoByRoute(): void {\r\n    // eslint-disable-next-line rxjs/no-ignored-subscription\r\n    this._activatedRoute.queryParams.pipe(untilDestroyed(this)).subscribe((params): void => {\r\n      const { token, userId } = params;\r\n\r\n      if (token && userId) {\r\n        this.userId = userId;\r\n        this.token = token;\r\n        this._cookieStorage.put(EStorageKeys.AUTH_TOKEN, token);\r\n        sessionStorage.setItem(EStorageKeys.USER_ID, userId);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _getUserData(): void {\r\n    if (!this.userId) {\r\n      return;\r\n    }\r\n\r\n    this._userService\r\n      .getUserById$(this.userId)\r\n      .pipe(untilDestroyed(this))\r\n      // eslint-disable-next-line rxjs/no-ignored-subscription\r\n      .subscribe((user: IUser | null): void => {\r\n        if (user) {\r\n          sessionStorage.setItem(EStorageKeys.USER_DATA, JSON.stringify(user));\r\n          this._authenticationService.updateUserData(user);\r\n          void this._router.navigate(['/landing']);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<h1>{{ 'app-login.title' | translate }}</h1>\r\n","import { LoginComponent } from './login.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [RouterModule.forChild(ROUTES), TranslateModule],\r\n})\r\nexport class LoginModule {}\r\n","import { IDataTableData } from '@aca-new/app/shared/components/data-table/shared/models/interfaces/data-table-data.interface';\r\nimport { ITableData } from '@aca-new/app/shared/components/table/shared/interfaces/table-data.interface';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { UntilDestroy } from '@ngneat/until-destroy';\r\nimport { QimaOptionalType } from '@qima/ngx-qima';\r\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\n@UntilDestroy()\r\nexport class DataTableService {\r\n  public readonly tableData$: Subject<ITableData[][]> = new BehaviorSubject<ITableData[][]>([]);\r\n  // TODO handle head cell sort\r\n  public readonly sort$: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n  // TODO handle filter\r\n  public readonly filter$: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n\r\n  public dataTableSubject$ = combineLatest([this.tableData$, this.sort$, this.filter$]).pipe(\r\n    map(([tableData, sort, filter]): ITableData[][] => {\r\n      // TODO handle table data sort & filter and so on\r\n      console.log(tableData);\r\n      console.log(sort);\r\n      console.log(filter);\r\n\r\n      return tableData;\r\n    })\r\n  );\r\n\r\n  public constructor(private readonly _httpClient: HttpClient) {}\r\n\r\n  // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n  public updateTableData(tableData: ITableData[][]): void {\r\n    this.tableData$.next(tableData);\r\n  }\r\n\r\n  public updateSort(str: string): void {\r\n    this.sort$.next(str);\r\n  }\r\n\r\n  public updateFilter(str: string): void {\r\n    this.filter$.next(str);\r\n  }\r\n\r\n  public getTableData$(url: string): Observable<QimaOptionalType<IDataTableData>> {\r\n    return this._httpClient.get<IDataTableData>(url, { observe: 'response' }).pipe(\r\n      map(\r\n        // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n        (response: Readonly<HttpResponse<IDataTableData>>): QimaOptionalType<IDataTableData> => response?.body\r\n      )\r\n    );\r\n  }\r\n}\r\n","<div class=\"app-table\">\n  <qima-table>\n    <qima-table-head>\n      <qima-table-head-cell\n        *ngFor=\"let header of tableHeaders; let index = index; trackBy: trackByIndex\"\n        (qimaTableHeadCellSortAscendingChange)=\"qimaTableHeadCellSortAscendingChange($event, index)\"\n        [qimaTableHeadCellSort]=\"header.isSort\"\n        [qimaTableHeadCellLabel]=\"header.label | translate\"\n      ></qima-table-head-cell>\n    </qima-table-head>\n\n    <qima-table-body>\n      <qima-table-row *ngFor=\"let rowData of tableData; trackBy: trackByIndex\">\n        <qima-table-body-cell-text\n          *ngFor=\"let cellData of rowData; trackBy: trackByIndex\"\n          [qimaTableBodyCellLabel]=\"cellData.label\"\n        ></qima-table-body-cell-text>\n      </qima-table-row>\n    </qima-table-body>\n  </qima-table>\n  <div\n    *ngIf=\"!tableData.length\"\n    class=\"app-table__empty qima-shadow-minus\"\n  >\n    {{ emptyMessage }}\n  </div>\n</div>\n","import { ITableData } from '@aca-new/app/shared/components/table/shared/interfaces/table-data.interface';\r\nimport { ITableHeader } from '@aca-new/app/shared/components/table/shared/interfaces/table-header.interface';\r\nimport { ITableSort } from '@aca-new/app/shared/components/table/shared/interfaces/table-sort.interface';\r\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\r\nimport { UntilDestroy } from '@ngneat/until-destroy';\r\nimport { QimaOptionalType } from '@qima/ngx-qima/models/types/qima-optional.type';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TableComponent {\r\n  /**\r\n   * @description\r\n   * Set the data of the table header\r\n   * @type {QimaOptionalType<ITableHeader[]>}\r\n   * @default []\r\n   */\r\n  @Input('tableHeaders')\r\n  public tableHeaders: QimaOptionalType<ITableHeader[]> = [];\r\n\r\n  /**\r\n   * @description\r\n   * Set the fallback message of the empty table\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  @Input('tableEmptyMessage')\r\n  public emptyMessage: string = '';\r\n\r\n  /**\r\n   * @description\r\n   * Set the data of the table\r\n   * @type {ITableData[][]}\r\n   * @default []\r\n   */\r\n  @Input('tableData')\r\n  public tableData: ITableData[][] = [];\r\n\r\n  /**\r\n   * @description\r\n   * output event when click table sort\r\n   */\r\n  @Output() public readonly tableSort: EventEmitter<ITableSort> = new EventEmitter<ITableSort>();\r\n\r\n  public trackByIndex(index: Readonly<number>): number {\r\n    return index;\r\n  }\r\n\r\n  public qimaTableHeadCellSortAscendingChange(containsSortEvent: Readonly<boolean>, index: Readonly<number>): void {\r\n    this.tableSort.emit({ sortingMode: containsSortEvent, position: index });\r\n  }\r\n}\r\n","<div class=\"data-table\">\r\n  <div *ngIf=\"isShowSectionTitle\">\r\n    <app-section-title\r\n      [sectionTitleIcon]=\"icon\"\r\n      [sectionTitleTitle]=\"title\"\r\n    ></app-section-title>\r\n    <qima-divider\r\n      class=\"divider\"\r\n      [qimaDividerOrientation]=\"horizontal\"\r\n    ></qima-divider>\r\n  </div>\r\n\r\n  <!-- TODO put into a toolbar -->\r\n  <qima-input-select\r\n    [ngModel]=\"selectActive\"\r\n    [qimaInputSelectHasClearButton]=\"false\"\r\n    class=\"data-table__select\"\r\n  >\r\n    <qima-menu>\r\n      <qima-menu-item-text\r\n        *ngFor=\"let item of selects; let index = index; trackBy: trackByIndex\"\r\n        (qimaMenuItemTextClick)=\"onToolbarSelectChange(item.value)\"\r\n        [qimaMenuItemTextLabel]=\"item.label | translate\"\r\n        [qimaMenuItemTextValue]=\"item.value\"\r\n      ></qima-menu-item-text>\r\n    </qima-menu>\r\n  </qima-input-select>\r\n\r\n  <app-table\r\n    (tableSort)=\"tableSort($event)\"\r\n    [tableHeaders]=\"tableHeaders\"\r\n    [tableData]=\"tableData\"\r\n    [tableEmptyMessage]=\"emptyMessage\"\r\n  ></app-table>\r\n\r\n  <ng-content select=\".table-subtotals\"></ng-content>\r\n\r\n  <qima-pagination\r\n    *ngIf=\"isShowPagination\"\r\n    [qimaPaginationEntriesAmount]=\"tableTotalSize\"\r\n    [qimaPaginationEntriesPerPageList]=\"pageSizeList\"\r\n    (qimaPaginationActivePageChange)=\"tablePaginationActivePageChange($event)\"\r\n    (qimaPaginationEntriesPerPageChange)=\"tablePaginationPageSizeChange($event)\"\r\n  ></qima-pagination>\r\n\r\n  <div\r\n    class=\"data-table__footer\"\r\n    *ngIf=\"isShowMore\"\r\n  >\r\n    <div class=\"view-more\">{{ 'TABLE.VIEW_MORE' | translate }}</div>\r\n    <qima-icon\r\n      class=\"view-more-icon\"\r\n      [qimaIconName]=\"chevronIconName\"\r\n      [qimaIconSize]=\"16\"\r\n    ></qima-icon>\r\n  </div>\r\n</div>\r\n","import { IDataTableSelect } from '@aca-new/app/pages/landing/shared/models/interfaces/data-table-select.interface';\r\nimport { IDataTableData } from '@aca-new/app/shared/components/data-table/shared/models/interfaces/data-table-data.interface';\r\nimport { DataTableService } from '@aca-new/app/shared/components/data-table/shared/service/data-table.service';\r\nimport { ETableDataType } from '@aca-new/app/shared/components/table/shared/enums/table-data-type.enum';\r\nimport { ITableData } from '@aca-new/app/shared/components/table/shared/interfaces/table-data.interface';\r\nimport { ITableHeader } from '@aca-new/app/shared/components/table/shared/interfaces/table-header.interface';\r\nimport { ITableSort } from '@aca-new/app/shared/components/table/shared/interfaces/table-sort.interface';\r\nimport {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectorRef,\r\n  OnChanges,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { EQimaDividerOrientation, EQimaIconName } from '@qima/ngx-qima';\r\nimport { QimaOptionalType } from '@qima/ngx-qima/models/types/qima-optional.type';\r\nimport { has } from 'lodash/index';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-data-table',\r\n  templateUrl: './data-table.component.html',\r\n  styleUrls: ['./data-table.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [DataTableService],\r\n})\r\nexport class DataTableComponent implements OnInit, OnChanges {\r\n  /**\r\n   * @description\r\n   * Set the config of the table selection in the landing page\r\n   * @type {IDataTableSelect[]}\r\n   * @default []\r\n   */\r\n  @Input('dataTableSelects')\r\n  public selects: IDataTableSelect[] = [];\r\n\r\n  /**\r\n   * @description\r\n   * Set the table title in the header\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  @Input('dataTableTitle')\r\n  public title: string = '';\r\n\r\n  /**\r\n   * @description\r\n   * Set the icon of the landing table\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  @Input('dataTableIcon')\r\n  public icon: string = '';\r\n\r\n  /**\r\n   * @description\r\n   * Set the fallback message of the empty table\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  @Input('dataTableEmptyMessage')\r\n  public emptyMessage: string = '';\r\n\r\n  /**\r\n   * @description\r\n   * Show or hide the app-section-title component\r\n   * @type {boolean}\r\n   * @default true\r\n   */\r\n  @Input('dataTableIsShowSectionTitle')\r\n  public isShowSectionTitle: boolean = true;\r\n\r\n  /**\r\n   * @description\r\n   * Show or hide the table Pagination\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  @Input('dataTableShowPagination')\r\n  public isShowPagination: boolean = false;\r\n\r\n  /**\r\n   * @description\r\n   * The list of entries count per page\r\n   * @type {number[]}\r\n   * @default []\r\n   */\r\n  @Input('tablePageSizeList')\r\n  public pageSizeList: number[] = [];\r\n\r\n  /**\r\n   * @description\r\n   * Api for request data\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  @Input('dataTableApiUrl')\r\n  public apiUrl: QimaOptionalType<string> = '';\r\n\r\n  @Input('dataTableHeaders')\r\n  public tableHeaders: ITableHeader[] = [];\r\n\r\n  @Input('dataTableIsShowMore')\r\n  public isShowMore: boolean = false;\r\n\r\n  @Input('dataTableSelectActive')\r\n  public selectActive: string = '';\r\n\r\n  @Input('dataTableSourceDataConvertTableData')\r\n  // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n  public sourceDataConvertTableData: QimaOptionalType<(source: Readonly<IDataTableData>, headers: ITableHeader[]) => ITableData[][]>;\r\n\r\n  // TODO:this should be handled in business component\r\n  @Output('dataTableToolbarSelectChange')\r\n  public readonly toolbarSelectChange: EventEmitter<Readonly<string>> = new EventEmitter<Readonly<string>>();\r\n\r\n  @Output('dataTablePaginationChange')\r\n  public readonly paginationChange: EventEmitter<Readonly<number>> = new EventEmitter<Readonly<number>>();\r\n\r\n  @Output('dataTablePageSizeChange')\r\n  public readonly pageSizeChange: EventEmitter<Readonly<number>> = new EventEmitter<Readonly<number>>();\r\n\r\n  public tableData: ITableData[][] = [];\r\n  public horizontal: EQimaDividerOrientation = EQimaDividerOrientation.HORIZONTAL;\r\n  public chevronIconName: EQimaIconName = EQimaIconName.CHEVRON_DOWN;\r\n  public tableTotalSize: number = 0;\r\n\r\n  public constructor(private readonly _dataTableService: DataTableService, private readonly _changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  public trackByIndex(index: Readonly<number>): number {\r\n    return index;\r\n  }\r\n\r\n  public tableSort(sortEvent: Readonly<ITableSort>): void {\r\n    // TODO sort\r\n    console.log(sortEvent);\r\n    this._dataTableService.updateSort('sort test');\r\n  }\r\n\r\n  public onToolbarSelectChange(selectId: Readonly<string>): void {\r\n    this.toolbarSelectChange.emit(selectId);\r\n  }\r\n\r\n  // TODO\r\n  public onFilter(): void {\r\n    this._dataTableService.updateFilter('filter test');\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    const { dataTableSubject$ } = this._dataTableService;\r\n\r\n    // eslint-disable-next-line rxjs/no-ignored-subscription\r\n    dataTableSubject$.pipe(untilDestroyed(this)).subscribe((res): void => {\r\n      this.tableData = res;\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n\r\n    this._getTableData();\r\n  }\r\n\r\n  public ngOnChanges(changes: Readonly<SimpleChanges>): void {\r\n    this._onApiUrlChange(changes);\r\n  }\r\n\r\n  public tablePaginationActivePageChange(page: Readonly<number>): void {\r\n    this.paginationChange.emit(page);\r\n  }\r\n\r\n  public tablePaginationPageSizeChange(page: Readonly<number>): void {\r\n    this.pageSizeChange.emit(page);\r\n  }\r\n\r\n  private _onApiUrlChange(changes: Readonly<SimpleChanges>): void {\r\n    if (has(changes, 'apiUrl') && changes.apiUrl.currentValue !== changes.apiUrl.previousValue) {\r\n      this._getTableData();\r\n    }\r\n  }\r\n\r\n  private _getTableData(): void {\r\n    if (!this.apiUrl) {\r\n      return;\r\n    }\r\n\r\n    this._dataTableService\r\n      .getTableData$(this.apiUrl)\r\n      .pipe(untilDestroyed(this))\r\n      // eslint-disable-next-line rxjs/no-ignored-subscription\r\n      .subscribe((res: QimaOptionalType<IDataTableData>): void => {\r\n        let tableData: ITableData[][] = [];\r\n\r\n        // 1 convert to T[][]\r\n        if (res) {\r\n          // the response may like this\r\n          // { totalSiza: 100, pageItems: {...}, ...}\r\n          // or\r\n          // { content: { totalSiza: 100, pageItems: {...},  ... } }\r\n          res = res.content ? res.content : res;\r\n          this.tableTotalSize = res.totalSize || 0;\r\n\r\n          if (this.sourceDataConvertTableData) {\r\n            tableData = this.sourceDataConvertTableData(res, this.tableHeaders);\r\n          } else {\r\n            tableData = this._sourceDataConvertTableData(res, this.tableHeaders);\r\n          }\r\n        }\r\n\r\n        // 2 trigger next\r\n        this._dataTableService.updateTableData(tableData);\r\n      });\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n  private _sourceDataConvertTableData(source: Readonly<IDataTableData>, headers: ITableHeader[]): ITableData[][] {\r\n    const tableData: ITableData[][] = [];\r\n\r\n    if (source.pageItems.length) {\r\n      source.pageItems.forEach((pageItem): void => {\r\n        const rowData: ITableData[] = [];\r\n\r\n        headers?.forEach((head: ITableHeader): void => {\r\n          const cellData: ITableData = {\r\n            type: ETableDataType.STRING,\r\n          };\r\n\r\n          cellData.type = head.type;\r\n\r\n          switch (cellData.type) {\r\n            case ETableDataType.STRING:\r\n              cellData.label = pageItem[head.key] as string;\r\n          }\r\n\r\n          rowData.push(cellData);\r\n        });\r\n\r\n        tableData.push(rowData);\r\n      });\r\n    }\r\n\r\n    return tableData;\r\n  }\r\n}\r\n","import { TableComponent } from '@aca-new/app/shared/components/table/table.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport {\r\n  QimaTableBodyCellTextModule,\r\n  QimaTableBodyModule,\r\n  QimaTableHeadCellModule,\r\n  QimaTableHeadModule,\r\n  QimaTableModule,\r\n  QimaTableRowModule,\r\n} from '@qima/ngx-qima';\r\n\r\n@NgModule({\r\n  declarations: [TableComponent],\r\n  imports: [\r\n    TranslateModule,\r\n    QimaTableHeadCellModule,\r\n    QimaTableModule,\r\n    QimaTableHeadModule,\r\n    CommonModule,\r\n    QimaTableRowModule,\r\n    QimaTableBodyCellTextModule,\r\n    QimaTableBodyModule,\r\n  ],\r\n  exports: [TableComponent],\r\n})\r\nexport class TableModule {}\r\n","import { DataTableComponent } from '@aca-new/app/shared/components/data-table/data-table.component';\r\nimport { SectionTitleModule } from '@aca-new/app/shared/components/section-title/section-title.module';\r\nimport { TableModule } from '@aca-new/app/shared/components/table/table.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport {\r\n  QimaDividerModule,\r\n  QimaIconModule,\r\n  QimaInputSelectModule,\r\n  QimaMenuItemTextModule,\r\n  QimaMenuModule,\r\n  QimaPaginationModule,\r\n} from '@qima/ngx-qima';\r\n\r\n@NgModule({\r\n  declarations: [DataTableComponent],\r\n  imports: [\r\n    QimaDividerModule,\r\n    QimaIconModule,\r\n    FormsModule,\r\n    TableModule,\r\n    CommonModule,\r\n    QimaMenuModule,\r\n    TranslateModule,\r\n    QimaInputSelectModule,\r\n    QimaMenuItemTextModule,\r\n    SectionTitleModule,\r\n    QimaPaginationModule,\r\n  ],\r\n  exports: [DataTableComponent],\r\n})\r\nexport class DataTableModule {}\r\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-section-title',\r\n  templateUrl: './section-title.component.html',\r\n  styleUrls: ['./section-title.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SectionTitleComponent {\r\n  /**\r\n   * @description\r\n   * Set the title\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  @Input('sectionTitleTitle')\r\n  public title: string = '';\r\n\r\n  /**\r\n   * @description\r\n   * Set the icon\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  @Input('sectionTitleIcon')\r\n  public icon: string = '';\r\n}\r\n","<div class=\"app-section-title\">\r\n  <img\r\n    [alt]=\"title\"\r\n    [src]=\"icon\"\r\n  />\r\n  <div class=\"app-section-title__title\">{{ title }}</div>\r\n</div>\r\n","import { SectionTitleComponent } from '@aca-new/app/shared/components/section-title/section-title.component';\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule({\r\n  declarations: [SectionTitleComponent],\r\n  exports: [SectionTitleComponent],\r\n})\r\nexport class SectionTitleModule {}\r\n","export enum ETableDataType {\r\n  NUMBER = 'number',\r\n  STRING = 'string',\r\n}\r\n","import { ENVIRONMENT } from '@aca-new/environments/environment';\r\n\r\nexport const { SERVER_API_URL, MARKETING_WEBSITE, MARKETING_WEBSITE_APP_LINK, NEW_ACA_LOGIN_URL } = ENVIRONMENT;\r\n","export const IMAGES = {\r\n  qimaLogo: 'assets/images/QIMALogo.svg',\r\n  upcomingIcon: 'assets/images/pictogram.svg',\r\n  reportIcon: 'assets/images/picto.svg',\r\n  bannerLogo: 'assets/images/Banner.png',\r\n};\r\n","/* eslint-disable no-magic-numbers */\r\nexport const TABLE_PAGINATION = {\r\n  pageSize10: 10,\r\n  pageSize25: 25,\r\n  pageSize50: 50,\r\n  pageSize100: 100,\r\n  pageSize150: 150,\r\n  pageSize200: 200,\r\n  pageSize250: 250,\r\n};\r\n","import { EStorageKeys } from '@aca-new/app/shared/models/enums/storage-keys.enum';\r\nimport { AuthenticationService } from '@aca-new/app/shared/services/authentication.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthoritiesGuard implements CanActivate {\r\n  public constructor(private readonly _cookieStorage: CookieService, private readonly _authenticationService: AuthenticationService) {}\r\n\r\n  public canActivate(): boolean | Promise<boolean> {\r\n    const userId = sessionStorage.getItem(EStorageKeys.USER_ID);\r\n    const token = this._cookieStorage.get(EStorageKeys.AUTH_TOKEN);\r\n\r\n    if (userId && token) {\r\n      return true;\r\n    }\r\n\r\n    this._authenticationService.navigateToLogin();\r\n\r\n    return false;\r\n  }\r\n}\r\n","export enum EStorageKeys {\r\n  AUTH_TOKEN = 'authenticationToken',\r\n  SEND_MOBILE_APP_LINK = 'showMobileBannerCookie',\r\n  USER_DATA = 'userData',\r\n  USER_ID = 'userId',\r\n}\r\n","import { IUser } from '@aca-new/app/pages/user/shared/models/interfaces/user.interface';\r\nimport { MARKETING_WEBSITE } from '@aca-new/app/shared/constants/app.constants';\r\nimport { EStorageKeys } from '@aca-new/app/shared/models/enums/storage-keys.enum';\r\nimport { ENVIRONMENT } from '@aca-new/environments/environment';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n  public readonly currentUserSubject$: Subject<IUser> = new Subject<IUser>();\r\n\r\n  public constructor(private readonly _cookieStorage: CookieService, @Inject(DOCUMENT) private readonly _document: Document) {}\r\n\r\n  // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n  public updateUserData(data: Readonly<IUser>): void {\r\n    this.currentUserSubject$.next(data);\r\n  }\r\n\r\n  public logout(): void {\r\n    sessionStorage.removeItem(EStorageKeys.USER_DATA);\r\n    sessionStorage.removeItem(EStorageKeys.USER_ID);\r\n    this._cookieStorage.remove(EStorageKeys.AUTH_TOKEN);\r\n    this._document.location.href = `${MARKETING_WEBSITE}/logout`;\r\n  }\r\n\r\n  public navigateToLogin(): void {\r\n    location.assign(ENVIRONMENT.NEW_ACA_LOGIN_URL);\r\n  }\r\n\r\n  public isAuthenticated(): boolean {\r\n    return sessionStorage.getItem(EStorageKeys.USER_DATA) !== null;\r\n  }\r\n\r\n  public getCurrentUser(): IUser {\r\n    return JSON.parse(sessionStorage.getItem(EStorageKeys.USER_DATA) || '{}');\r\n  }\r\n}\r\n","/* eslint-disable @typescript-eslint/naming-convention */\r\n\r\nexport const ENVIRONMENT = {\r\n  production: false,\r\n  SERVER_API_URL: 'https://ppapi.qima.com/',\r\n  MARKETING_WEBSITE: 'https://www.qima.com',\r\n  MARKETING_WEBSITE_APP_LINK: '/app-marketing',\r\n  NEW_ACA_LOGIN_URL: `https://ppaca.qima.com/login?redirect=${encodeURIComponent(`${location.origin}/login?token={token}&userId={userId}`)}`,\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst ROUTES: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'landing',\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'landing',\r\n    loadChildren: (): Promise<unknown> => import('./pages/landing/landing.module').then((m): unknown => m.LandingModule),\r\n  },\r\n  {\r\n    path: 'bookings',\r\n    loadChildren: (): Promise<unknown> => import('./pages/bookings/bookings.module').then((m): unknown => m.BookingsModule),\r\n  },\r\n  {\r\n    path: 'book-inspection',\r\n    loadChildren: (): Promise<unknown> =>\r\n      import('./pages/book/pages/product-inspections/product-inspections.module').then((m): unknown => m.ProductInspectionsModule),\r\n  },\r\n  {\r\n    path: 'reports',\r\n    loadChildren: (): Promise<unknown> => import('./pages/reports/reports.module').then((m): unknown => m.ReportsModule),\r\n  },\r\n  {\r\n    path: 'payments',\r\n    loadChildren: (): Promise<unknown> => import('./pages/payments/payments.module').then((m): unknown => m.PaymentsModule),\r\n  },\r\n  {\r\n    path: 'login',\r\n    loadChildren: (): Promise<unknown> => import('./pages/user/pages/login/login.module').then((m): unknown => m.LoginModule),\r\n  },\r\n  { path: '**', redirectTo: 'landing' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(ROUTES)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","export enum ELocales {\r\n  CHINESE = 'zh',\r\n  ENGLISH = 'en',\r\n  SPANISH = 'es',\r\n}\r\n","import { ICompanyLogo } from '@aca-new/app/shared/components/header/shared/interfaces/companyLogo.interface';\r\nimport { SERVER_API_URL } from '@aca-new/app/shared/constants/app.constants';\r\nimport { IHttpResponseBody } from '@aca-new/app/shared/models/interfaces/http-response-body.interface';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HeaderService {\r\n  public constructor(private readonly _httpClient: HttpClient) {}\r\n\r\n  public getCompanyLogo$(companyId: string): Observable<string | null> {\r\n    const userId = sessionStorage.getItem('userId');\r\n\r\n    return (\r\n      this._httpClient\r\n        .get<ICompanyLogo>(`${SERVER_API_URL}/user/${userId}/company/${companyId}/logo`, { observe: 'response' })\r\n        // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n        .pipe(map((response: Readonly<HttpResponse<ICompanyLogo>>): string | null => response?.body?.image || null))\r\n    );\r\n  }\r\n\r\n  public getSicImage$(sicId: string): Observable<string | null> {\r\n    return this._httpClient\r\n      .get<IHttpResponseBody<string>>(`${SERVER_API_URL}/parameter/sic/${sicId}/base64?refresh=true`, { observe: 'response' })\r\n      .pipe(\r\n        // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n        map((response: Readonly<HttpResponse<IHttpResponseBody<string>>>): string | null => response?.body?.content || null)\r\n      );\r\n  }\r\n}\r\n","<div class=\"app-header\">\r\n  <div class=\"app-header__logo\">\r\n    <img\r\n      alt=\"qima logo\"\r\n      class=\"qima-logo\"\r\n      routerLink=\"/\"\r\n      [src]=\"qimaLogo\"\r\n    />\r\n    <img\r\n      alt=\"company logo\"\r\n      *ngIf=\"companyLogo\"\r\n      class=\"company-logo\"\r\n      [src]=\"companyLogo\"\r\n    />\r\n  </div>\r\n  <div class=\"app-header__tool-bar\">\r\n    <ul>\r\n      <li class=\"hide-media-sm\">\r\n        <div class=\"app-header__tool-bar__company\">\r\n          <div class=\"app-header__tool-bar__company__info\">\r\n            <span\r\n              class=\"parent-company-name\"\r\n              *ngIf=\"parentCompanyName\"\r\n            >\r\n              {{ 'APP_NAV_TOP.ACCOUNT.SUB_ACCOUNT_NAME' | translate: { companyName: parentCompanyName } }}\r\n            </span>\r\n            <div\r\n              class=\"app-header__tool-bar__company__info__child\"\r\n              [ngClass]=\"{ 'not-sub-account': !parentCompanyName }\"\r\n            >\r\n              <span\r\n                class=\"login-as\"\r\n                [innerHTML]=\"'APP_NAV_TOP.ACCOUNT.LOGGED_IN_AS' | translate\"\r\n              >\r\n              </span>\r\n              <span class=\"manager-name\">{{ currentUser?.login }}</span>\r\n            </div>\r\n          </div>\r\n          <span\r\n            (click)=\"openProfileActions()\"\r\n            (keydown.enter)=\"openProfileActions()\"\r\n            class=\"app-header__tool-bar__info-icon\"\r\n          >\r\n            <qima-icon\r\n              [qimaIconName]=\"chevronIconName\"\r\n              [qimaIconSize]=\"16\"\r\n            ></qima-icon>\r\n          </span>\r\n        </div>\r\n        <div [hidden]=\"!isDropDownVisible\">\r\n          <qima-menu>\r\n            <qima-menu-item-text\r\n              *ngFor=\"let dropDown of dropDownList; trackBy: trackByIndex\"\r\n              [qimaMenuItemTextLabel]=\"dropDown.title\"\r\n            ></qima-menu-item-text>\r\n          </qima-menu>\r\n        </div>\r\n      </li>\r\n      <li class=\"app-header__tool-bar__divider hide-media-sm\">\r\n        <qima-divider [qimaDividerOrientation]=\"vertical\"></qima-divider>\r\n      </li>\r\n      <li class=\"app-header__tool-bar__info-icon\">\r\n        <qima-icon [qimaIconName]=\"infoIconName\"></qima-icon>\r\n      </li>\r\n      <li class=\"app-header__tool-bar__divider\">\r\n        <qima-divider [qimaDividerOrientation]=\"vertical\"></qima-divider>\r\n      </li>\r\n      <li class=\"hide-media-md app-header__tool-bar__account-message\">\r\n        <qima-avatar\r\n          [qimaAvatarSize]=\"avatarSize\"\r\n          [qimaAvatarImage]=\"sicImage\"\r\n          [qimaAvatarFirstName]=\"avatarFirstName\"\r\n          [qimaAvatarLastName]=\"avatarLastName\"\r\n        ></qima-avatar>\r\n        <div\r\n          class=\"qima-ml-xs\"\r\n          *ngIf=\"currentUser?.sic\"\r\n        >\r\n          <div class=\"manager-label\">{{ 'APP_NAV_TOP.ACCOUNT.YOUR_ACCT_MGR' | translate }}</div>\r\n          <div class=\"manager-name\">{{ currentUser?.sic }}</div>\r\n        </div>\r\n        <div\r\n          class=\"account-no-sic\"\r\n          *ngIf=\"!currentUser?.sic\"\r\n          [innerHTML]=\"'APP_NAV_TOP.ACCOUNT.NO_SIC' | translate\"\r\n        ></div>\r\n      </li>\r\n      <li class=\"app-header__tool-bar__divider hide-media-md\">\r\n        <qima-divider [qimaDividerOrientation]=\"vertical\"></qima-divider>\r\n      </li>\r\n      <li class=\"app-header__tool-bar__logout-icon\">\r\n        <qima-icon\r\n          (click)=\"logout()\"\r\n          (keydown.enter)=\"logout()\"\r\n          [qimaIconName]=\"logoutIconName\"\r\n        ></qima-icon>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n","import { IUser } from '@aca-new/app/pages/user/shared/models/interfaces/user.interface';\r\nimport { HeaderService } from '@aca-new/app/shared/components/header/shared/service/header.service';\r\nimport { IMAGES } from '@aca-new/app/shared/constants/images.constants';\r\nimport { AuthenticationService } from '@aca-new/app/shared/services/authentication.service';\r\nimport { Component, ChangeDetectionStrategy, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { EQimaAvatarSize, EQimaDividerOrientation, EQimaIconName } from '@qima/ngx-qima';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  // TODO need to add interface to currentUser\r\n  public currentUser: IUser = this._authenticationService.getCurrentUser();\r\n  public parentCompanyName: string = '';\r\n  public logoutIconName: EQimaIconName = EQimaIconName.LOGOUT;\r\n  public infoIconName: EQimaIconName = EQimaIconName.INFORMATION;\r\n  public chevronIconName: EQimaIconName = EQimaIconName.CHEVRON_DOWN;\r\n  public vertical: EQimaDividerOrientation = EQimaDividerOrientation.VERTICAL;\r\n  public sicImage: string = '';\r\n  public companyLogo: string = '';\r\n  public qimaLogo: string = IMAGES.qimaLogo;\r\n  public isDropDownVisible: boolean = false;\r\n  public avatarFirstName: string = '';\r\n  public avatarSize: EQimaAvatarSize = EQimaAvatarSize.MIN;\r\n  public avatarLastName: string = '';\r\n\r\n  public dropDownList = [\r\n    {\r\n      title: this._translateService.instant('APP_NAV_TOP.ACCOUNT.YOUR_ACCOUNT'),\r\n    },\r\n    {\r\n      title: this._translateService.instant('APP_NAV_TOP.ACCOUNT.PREFERENCES'),\r\n    },\r\n    {\r\n      title: this._translateService.instant('APP_NAV_TOP.ACCOUNT.YOUR_DOCUMENTS'),\r\n    },\r\n  ];\r\n\r\n  public constructor(\r\n    private readonly _translateService: TranslateService,\r\n    private readonly _headerService: HeaderService,\r\n    private readonly _changeDetectorRef: ChangeDetectorRef,\r\n    private readonly _authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  public openProfileActions(): void {\r\n    this.isDropDownVisible = !this.isDropDownVisible;\r\n  }\r\n\r\n  public trackByIndex(index: Readonly<number>): number {\r\n    return index;\r\n  }\r\n\r\n  public logout(): void {\r\n    this._authenticationService.logout();\r\n  }\r\n\r\n  public formatAvatarName(): void {\r\n    if (this.currentUser?.sic) {\r\n      const sicArray = this.currentUser?.sic.split(' ');\r\n\r\n      [this.avatarFirstName] = sicArray;\r\n\r\n      if (sicArray.length > 1) {\r\n        this.avatarLastName = sicArray[sicArray.length - 1];\r\n      }\r\n    }\r\n  }\r\n\r\n  public getUserInfo(): void {\r\n    if (this._authenticationService.isAuthenticated()) {\r\n      this._getCompanyLogo();\r\n      this._getSic();\r\n      this.formatAvatarName();\r\n      this.parentCompanyName = this.currentUser.company?.parentCompanyName;\r\n    }\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.getUserInfo();\r\n    const { currentUserSubject$ } = this._authenticationService;\r\n\r\n    // eslint-disable-next-line rxjs/no-ignored-subscription,@typescript-eslint/prefer-readonly-parameter-types\r\n    currentUserSubject$.pipe(untilDestroyed(this)).subscribe((data: Readonly<IUser>): void => {\r\n      this.currentUser = data;\r\n      this.getUserInfo();\r\n    });\r\n  }\r\n\r\n  private _getCompanyLogo(): void {\r\n    if (this.currentUser?.company?.id) {\r\n      this._headerService\r\n        .getCompanyLogo$(this.currentUser.company.id)\r\n        .pipe(untilDestroyed(this))\r\n        // eslint-disable-next-line rxjs/no-ignored-subscription\r\n        .subscribe((companyLogo: string | null): void => {\r\n          if (companyLogo) {\r\n            this.companyLogo = companyLogo;\r\n            this._changeDetectorRef.markForCheck();\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  private _getSic(): void {\r\n    if (this.currentUser?.company?.id) {\r\n      this._headerService\r\n        .getSicImage$(this.currentUser?.sicId)\r\n        .pipe(untilDestroyed(this))\r\n        // eslint-disable-next-line rxjs/no-ignored-subscription\r\n        .subscribe((sicImage: string | null): void => {\r\n          if (sicImage) {\r\n            this.sicImage = sicImage;\r\n          }\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AsideService {\r\n  public readonly asideMenuShowSubject$: Subject<boolean> = new Subject<boolean>();\r\n\r\n  public updateAsideMenuShow(isShow: boolean): void {\r\n    this.asideMenuShowSubject$.next(isShow);\r\n  }\r\n}\r\n","import { CHEVRON_RIGHT_SIZE } from '@aca-new/app/shared/components/aside/shared/constants/aside-style.constants';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { EQimaIconName } from '@qima/ngx-qima';\n\n@Component({\n  selector: 'app-book-now',\n  templateUrl: './book-now.component.html',\n  styleUrls: ['./book-now.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BookNowComponent {\n  /**\n   * @description\n   * Check or not\n   * @type {boolean}\n   * @default false\n   */\n  @Input('isBookNowChecked')\n  public isChecked: boolean = false;\n\n  public inspectIcon: EQimaIconName = EQimaIconName.INSPECT;\n  public chevronRightIcon: EQimaIconName = EQimaIconName.CHEVRON_RIGHT;\n  public chevronRightSize: number = CHEVRON_RIGHT_SIZE;\n\n  @Output('bookNowClick')\n  public readonly bookNowClick: EventEmitter<MouseEvent | Event> = new EventEmitter<MouseEvent | Event>();\n\n  public onClick(event: Readonly<MouseEvent>): void {\n    this._emitClick(event);\n  }\n\n  public onEnter(event: Readonly<Event>): void {\n    this._emitClick(event);\n  }\n\n  private _emitClick(event: Readonly<MouseEvent | Event>): void {\n    this.bookNowClick.emit(event);\n  }\n}\n","export const CHEVRON_RIGHT_SIZE = 13;\r\n","<div\r\n  class=\"app-book-now\"\r\n  (click)=\"onClick($event)\"\r\n  (keydown.enter)=\"onEnter($event)\"\r\n  [class.app-book-now--checked]=\"isChecked\"\r\n>\r\n  <div class=\"app-book-now__container\">\r\n    <qima-icon [qimaIconName]=\"inspectIcon\"></qima-icon>\r\n    <span class=\"label\">Book Now</span>\r\n    <qima-icon\r\n      [qimaIconName]=\"chevronRightIcon\"\r\n      [qimaIconSize]=\"chevronRightSize\"\r\n    ></qima-icon>\r\n  </div>\r\n</div>\r\n","import { Component, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-overlay',\n  templateUrl: './overlay.component.html',\n  styleUrls: ['./overlay.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OverlayComponent {\n  @Output('overlayClick')\n  public readonly overlayClick: EventEmitter<MouseEvent | Event> = new EventEmitter<MouseEvent | Event>();\n\n  public onClick(event: Readonly<MouseEvent | Event>): void {\n    this._emitClick(event);\n  }\n\n  public onEnter(event: Readonly<MouseEvent | Event>): void {\n    this._emitClick(event);\n  }\n\n  private _emitClick(event: Readonly<MouseEvent | Event>): void {\n    this.overlayClick.emit(event);\n  }\n}\n","<div\n  class=\"overlay\"\n  (click)=\"onClick($event)\"\n  (keydown.enter)=\"onEnter($event)\"\n>\n  <div class=\"overlay__header\"></div>\n  <div class=\"overlay__aside\"></div>\n  <div class=\"overlay__content\"></div>\n</div>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { EQimaColorCherry, EQimaDotSize, EQimaIconName, QimaColorsType } from '@qima/ngx-qima';\n\n@Component({\n  selector: 'app-aside-item',\n  templateUrl: './aside-item.component.html',\n  styleUrls: ['./aside-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsideItemComponent {\n  /**\n   * @description\n   * The name of the icon to display\n   * @type {EQimaIconName}\n   * @default undefined\n   */\n  @Input('iconName')\n  public iconName: EQimaIconName = EQimaIconName.INFORMATION;\n\n  /**\n   * @description\n   * The label of the aside common item\n   * @type {string}\n   * @default ''\n   */\n  @Input('label')\n  public label: string = '';\n\n  /**\n   * @description\n   * Check or not\n   * @type {boolean}\n   * @default false\n   */\n  @Input('isAsideItemChecked')\n  public isChecked: boolean = false;\n\n  @Output('asideItemClick')\n  public readonly asideItemClick: EventEmitter<MouseEvent | Event> = new EventEmitter<MouseEvent | Event>();\n\n  public dotColor: QimaColorsType = EQimaColorCherry.CHERRY_500;\n  public dotSize: EQimaDotSize = EQimaDotSize.SMALL;\n\n  public onClick(event: Readonly<MouseEvent>): void {\n    this._emitClick(event);\n  }\n\n  public onEnter(event: Readonly<Event>): void {\n    this._emitClick(event);\n  }\n\n  private _emitClick(event: Readonly<MouseEvent | Event>): void {\n    this.asideItemClick.emit(event);\n  }\n}\n","<div\r\n  class=\"app-aside-item\"\r\n  (click)=\"onClick($event)\"\r\n  (keydown.enter)=\"onEnter($event)\"\r\n  [class.app-aside-item--checked]=\"isChecked\"\r\n>\r\n  <qima-icon [qimaIconName]=\"iconName\"></qima-icon>\r\n  <span class=\"app-aside-item__label\">{{ label }}</span>\r\n  <qima-dot\r\n    class=\"app-aside-item__dot\"\r\n    [style.background-color]=\"dotColor\"\r\n    [qimaDotSize]=\"dotSize\"\r\n  ></qima-dot>\r\n</div>\r\n","<div\n  class=\"app-aside-menu-item\"\n  (click)=\"onClick($event)\"\n  (keydown.enter)=\"onEnter($event)\"\n  [class.app-aside-menu-item--checked]=\"isChecked\"\n>\n  <span class=\"app-aside-menu-item__label\">{{ label }}</span>\n  <div\n    *ngIf=\"isIconShow\"\n    class=\"app-aside-menu-item__icon\"\n  >\n    <qima-icon\n      *ngIf=\"!isChecked\"\n      [qimaIconName]=\"chevronRightIcon\"\n      [qimaIconSize]=\"chevronRightSize\"\n    ></qima-icon>\n    <qima-dot\n      *ngIf=\"isChecked\"\n      class=\"dot-checked\"\n      [style.background-color]=\"dotColor\"\n      [qimaDotSize]=\"dotSize\"\n    ></qima-dot>\n  </div>\n</div>\n","import { CHEVRON_RIGHT_SIZE } from '@aca-new/app/shared/components/aside/shared/constants/aside-style.constants';\nimport { Component, EventEmitter, Input, Output, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { EQimaColorPool, EQimaDotSize, EQimaIconName, QimaColorsType } from '@qima/ngx-qima';\nimport { QimaOptionalType } from '@qima/ngx-qima/models/types/qima-optional.type';\n\n@Component({\n  selector: 'app-aside-menu-item',\n  templateUrl: './aside-menu-item.component.html',\n  styleUrls: ['./aside-menu-item.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AsideMenuItemComponent {\n  /**\n   * @description\n   * The label of the aside-menu item\n   * @type {string}\n   * @default ''\n   */\n  @Input('asideMenuItemLabel')\n  public label: string = '';\n\n  /**\n   * @description\n   * Check or not\n   * @type {boolean}\n   * @default false\n   */\n  @Input('isAsideMenuItemChecked')\n  public isChecked: boolean = false;\n\n  /**\n   * @description\n   * Show icon or not\n   * @type {boolean}\n   * @default false\n   */\n  @Input('isAsideMenuItemIconShow')\n  public isIconShow: QimaOptionalType<boolean> = false;\n\n  @Output('asideMenuItemClick')\n  public readonly itemClick: EventEmitter<MouseEvent | Event> = new EventEmitter<MouseEvent | Event>();\n\n  public chevronRightIcon: EQimaIconName = EQimaIconName.CHEVRON_RIGHT;\n\n  public chevronRightSize: number = CHEVRON_RIGHT_SIZE;\n\n  public dotColor: QimaColorsType = EQimaColorPool.POOL_600;\n\n  public dotSize: EQimaDotSize = EQimaDotSize.SMALL;\n\n  public onClick(event: Readonly<MouseEvent | Event>): void {\n    this._emitClick(event);\n  }\n\n  public onEnter(event: Readonly<Event>): void {\n    this._emitClick(event);\n  }\n\n  private _emitClick(event: Readonly<MouseEvent | Event>): void {\n    this.itemClick.emit(event);\n  }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\r\nimport { EQimaIceCubeSize, EQimaIceCubeStyle } from '@qima/ngx-qima';\r\n\r\n@Component({\r\n  selector: 'app-previous-order-item',\r\n  templateUrl: './previous-order-item.component.html',\r\n  styleUrls: ['./previous-order-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class PreviousOrderItemComponent {\r\n  /**\r\n   * @description\r\n   * The label of ice cube of the item\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  @Input('previousOrderItemIceCubeLabel')\r\n  public iceCubeLabel = '';\r\n\r\n  /**\r\n   * @description\r\n   * The name of the previous order\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  @Input('previousOrderItemOrderName')\r\n  public orderName = '';\r\n\r\n  /**\r\n   * @description\r\n   * The date of the previous order\r\n   * @type {string}\r\n   * @default ''\r\n   */\r\n  @Input('previousOrderItemOrderDate')\r\n  public orderDate = '';\r\n\r\n  @Output('previousOrderItemClick')\r\n  public readonly itemClick: EventEmitter<MouseEvent | Event> = new EventEmitter<MouseEvent | Event>();\r\n\r\n  public iceCubeSize: EQimaIceCubeSize = EQimaIceCubeSize.SMALL;\r\n\r\n  public iceCubeStyle: EQimaIceCubeStyle = EQimaIceCubeStyle.CHERRY;\r\n\r\n  public isIceCubeHasOutline: boolean = false;\r\n\r\n  public onClick(event: Readonly<MouseEvent | Event>): void {\r\n    this._emitClick(event);\r\n  }\r\n\r\n  public onEnter(event: Readonly<Event>): void {\r\n    this._emitClick(event);\r\n  }\r\n\r\n  private _emitClick(event: Readonly<MouseEvent | Event>): void {\r\n    this.itemClick.emit(event);\r\n  }\r\n}\r\n","<div\r\n  class=\"app-previous-order-item\"\r\n  (click)=\"onClick($event)\"\r\n  (keydown.enter)=\"onEnter($event)\"\r\n>\r\n  <qima-ice-cube\r\n    [qimaIceCubeHasOutline]=\"isIceCubeHasOutline\"\r\n    [qimaIceCubeLabel]=\"iceCubeLabel\"\r\n    [qimaIceCubeStyle]=\"iceCubeStyle\"\r\n    [qimaIceCubeSize]=\"iceCubeSize\"\r\n  ></qima-ice-cube>\r\n  <div class=\"app-previous-order-item__order\">\r\n    <span class=\"order-name\">{{ orderName }}</span>\r\n    <span class=\"order-date\">{{ orderDate }}</span>\r\n  </div>\r\n</div>\r\n","<div\n  class=\"app-aside-menu\"\n  [class.app-aside-menu--expanded]=\"isExpanded\"\n>\n  <div class=\"app-aside-menu__content\">\n    <div class=\"app-aside-menu__content__header\">\n      <app-section-title\n        [sectionTitleIcon]=\"serviceIcon\"\n        [sectionTitleTitle]=\"title\"\n      ></app-section-title>\n      <qima-button-icon\n        (qimaButtonIconClick)=\"onCloseClick()\"\n        [qimaButtonIconStyle]=\"closeButtonIconStyle\"\n        [qimaButtonIconName]=\"closeIconName\"\n        [qimaButtonIconSize]=\"closeButtonSize\"\n      ></qima-button-icon>\n    </div>\n    <div class=\"app-aside-menu__content__service\">\n      <div class=\"app-aside-menu__content__service__left\">\n        <app-aside-menu-item\n          *ngFor=\"let item of businessSolutions; let index = index; trackBy: trackByIndex\"\n          (asideMenuItemClick)=\"onAsideMenuBusinessSolutionClick(index)\"\n          [asideMenuItemLabel]=\"item.label\"\n          [isAsideMenuItemChecked]=\"index === asideMenuBusinessSolutionIndex\"\n          [isAsideMenuItemIconShow]=\"true\"\n        ></app-aside-menu-item>\n        <div class=\"app-aside-menu__content__service__left__book-previous-order-title\">{{ bookFromPreviousTitle }}</div>\n        <app-previous-order-item\n          *ngFor=\"let item of previousOrders; let index = index; trackBy: trackByIndex\"\n          (previousOrderItemClick)=\"onPreviousOrderItemClick(index)\"\n          [previousOrderItemIceCubeLabel]=\"item.iceCubeLabel\"\n          [previousOrderItemOrderName]=\"item.orderName\"\n          [previousOrderItemOrderDate]=\"item.orderDate\"\n        ></app-previous-order-item>\n      </div>\n      <qima-divider\n        *ngIf=\"isExpanded\"\n        [qimaDividerStyle]=\"dividerStyle\"\n        [qimaDividerOrientation]=\"dividerOrientation\"\n      ></qima-divider>\n      <div\n        *ngIf=\"isExpanded\"\n        class=\"app-aside-menu__content__service__right\"\n      >\n        <app-aside-menu-item\n          *ngFor=\"let item of serviceTypesActive; let index = index; trackBy: trackByIndex\"\n          (asideMenuItemClick)=\"onAsideMenuServiceTypeClick(index)\"\n          [asideMenuItemLabel]=\"item.label\"\n          [isAsideMenuItemChecked]=\"index === asideMenuServiceTypeIndex\"\n        ></app-aside-menu-item>\n      </div>\n    </div>\n  </div>\n</div>\n","import { IBusinessSolution } from '@aca-new/app/shared/components/aside/shared/components/aside-menu/share/models/interfaces/business-solution.interface';\r\nimport { IPreviousOrder } from '@aca-new/app/shared/components/aside/shared/components/aside-menu/share/models/interfaces/previous-order.interface';\r\nimport { IServiceType } from '@aca-new/app/shared/components/aside/shared/components/aside-menu/share/models/interfaces/service-type.interface';\r\nimport { AsideService } from '@aca-new/app/shared/components/aside/shared/services/aside.service';\r\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport {\r\n  EQimaButtonIconStyle,\r\n  EQimaButtonSize,\r\n  EQimaDividerOrientation,\r\n  EQimaDividerStyle,\r\n  EQimaIconName,\r\n  QimaOptionalType,\r\n} from '@qima/ngx-qima';\r\n\r\n@Component({\r\n  selector: 'app-aside-menu',\r\n  templateUrl: './aside-menu.component.html',\r\n  styleUrls: ['./aside-menu.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AsideMenuComponent {\r\n  public isExpanded: boolean = false;\r\n\r\n  public serviceIcon: string = 'assets/images/pictogram.svg';\r\n\r\n  public title: string = this._translateService.instant('APP_BOOK_SUB_MENU.TITLE');\r\n\r\n  public closeButtonIconStyle: EQimaButtonIconStyle = EQimaButtonIconStyle.TERTIARY;\r\n\r\n  public closeIconName: EQimaIconName = EQimaIconName.CLOSE;\r\n\r\n  public closeButtonSize: EQimaButtonSize = EQimaButtonSize.SMALL;\r\n\r\n  // TODO translation\r\n  public businessSolutions: IBusinessSolution[] = [\r\n    {\r\n      label: 'Product Inspections',\r\n      serviceTypes: [\r\n        {\r\n          label: 'Pre-Shipment Inspection',\r\n        },\r\n        {\r\n          label: 'During Production Inspection ',\r\n        },\r\n        {\r\n          label: 'Initial Production Check',\r\n        },\r\n        {\r\n          label: 'Container Loading Check',\r\n        },\r\n        {\r\n          label: 'Pre-Customer Clearance Inspection',\r\n        },\r\n        {\r\n          label: 'Production Monitoring',\r\n        },\r\n        {\r\n          label: 'Sample Collection',\r\n        },\r\n        {\r\n          label: 'Sample Review',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: 'Testings',\r\n      serviceTypes: [\r\n        {\r\n          label: 'Search and book a Lab Test',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: 'Certifications',\r\n      serviceTypes: [\r\n        {\r\n          label: 'SABER Certification',\r\n        },\r\n        {\r\n          label: 'SASO Registration (CITC / IECEE / WRT)',\r\n        },\r\n        {\r\n          label: 'G-Mark Certification',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      label: 'Supplier audits',\r\n      serviceTypes: [\r\n        {\r\n          label: 'Good Manufacturing Practise Audit (GMP)',\r\n        },\r\n        {\r\n          label: 'Good Hygiene Practise Audit (GHP)',\r\n        },\r\n        {\r\n          label: 'Manifacturing Audit (MA)',\r\n        },\r\n        {\r\n          label: 'Ethical Audit (QIMA Ethical / SMETA / ICS / BSCI / RJC / Higg FSLM)',\r\n        },\r\n        {\r\n          label: 'Environmental Audit (QIMA ENVA / ICS ENVA / Higg FEM)',\r\n        },\r\n        {\r\n          label: 'Structural Audit (STRA)',\r\n        },\r\n        {\r\n          label: 'C-TPAT Audit',\r\n        },\r\n        {\r\n          label: 'Desktop Review (DR)',\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  public serviceTypesActive: IServiceType[] = [];\r\n\r\n  // TODO create service for loading previous order data\r\n  public previousOrders: IPreviousOrder[] = [\r\n    {\r\n      iceCubeLabel: 'PSI',\r\n      orderName: 'PSI-32032392-CHINA',\r\n      orderDate: '2022-03-22',\r\n    },\r\n    {\r\n      iceCubeLabel: 'PEO',\r\n      orderName: 'PEO-123412321-CHINA',\r\n      orderDate: '2022-04-11',\r\n    },\r\n    {\r\n      iceCubeLabel: 'CLI',\r\n      orderName: 'CLI-4545454554-USA',\r\n      orderDate: '2022-03-21',\r\n    },\r\n  ];\r\n\r\n  public asideMenuBusinessSolutionIndex: QimaOptionalType<number> = undefined;\r\n  public asideMenuServiceTypeIndex: QimaOptionalType<number> = undefined;\r\n  public bookFromPreviousTitle: string = 'Book from previous order';\r\n  public dividerOrientation: EQimaDividerOrientation = EQimaDividerOrientation.VERTICAL;\r\n  public dividerStyle: EQimaDividerStyle = EQimaDividerStyle.PEARL;\r\n\r\n  public constructor(private readonly _asideService: AsideService, private readonly _translateService: TranslateService) {}\r\n\r\n  public trackByIndex(index: Readonly<number>): number {\r\n    return index;\r\n  }\r\n\r\n  public onCloseClick(): void {\r\n    this._closeAsideMenu();\r\n  }\r\n\r\n  public onAsideMenuBusinessSolutionClick(index: Readonly<number>): void {\r\n    this.asideMenuBusinessSolutionIndex = index;\r\n    this.serviceTypesActive = this.businessSolutions[index].serviceTypes;\r\n    this.isExpanded = true;\r\n  }\r\n\r\n  public onPreviousOrderItemClick(index: Readonly<number>): void {\r\n    this._asideService.updateAsideMenuShow(false);\r\n    // TODO handle book previous order\r\n    console.log(index);\r\n  }\r\n\r\n  public onAsideMenuServiceTypeClick(index: Readonly<number>): void {\r\n    this.asideMenuServiceTypeIndex = index;\r\n    this._asideService.updateAsideMenuShow(false);\r\n  }\r\n\r\n  private _closeAsideMenu(): void {\r\n    this._asideService.updateAsideMenuShow(false);\r\n  }\r\n}\r\n","<app-overlay\r\n  *ngIf=\"isAsideMenuShow\"\r\n  (overlayClick)=\"onOverlayClick()\"\r\n></app-overlay>\r\n<div class=\"app-aside\">\r\n  <app-book-now\r\n    (bookNowClick)=\"onBookNowClick()\"\r\n    [isBookNowChecked]=\"isAsideMenuShow\"\r\n  ></app-book-now>\r\n  <div *ngIf=\"!isAsideMenuShow\">\r\n    <app-aside-item\r\n      *ngFor=\"let item of menuItems; let index = index; trackBy: trackByIndex\"\r\n      (asideItemClick)=\"onAsideItemClick(index, item)\"\r\n      [iconName]=\"item.iconName\"\r\n      [label]=\"item.label\"\r\n      [isAsideItemChecked]=\"index === asideItemCheckedIndex\"\r\n    ></app-aside-item>\r\n  </div>\r\n</div>\r\n<app-aside-menu *ngIf=\"isAsideMenuShow\"></app-aside-menu>\r\n","import { IAsideItem } from '@aca-new/app/shared/components/aside/shared/models/interfaces/aside-item.interface';\r\nimport { AsideService } from '@aca-new/app/shared/components/aside/shared/services/aside.service';\r\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { EQimaIconName, QimaOptionalType } from '@qima/ngx-qima';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-aside',\r\n  templateUrl: './aside.component.html',\r\n  styleUrls: ['./aside.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [AsideService],\r\n})\r\nexport class AsideComponent implements OnInit {\r\n  /**\r\n   * @description\r\n   * Show or hide the aside menu of the app\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  public isAsideMenuShow: boolean = false;\r\n  public asideItemCheckedIndex: QimaOptionalType<number> = undefined;\r\n\r\n  public menuItems: IAsideItem[] = [\r\n    {\r\n      label: this._translateService.instant('APP_ASIDE.COMMON_ITEMS.ANALYTICS'),\r\n      iconName: EQimaIconName.ANALYTICS,\r\n    },\r\n    {\r\n      label: this._translateService.instant('APP_ASIDE.COMMON_ITEMS.BOOKINGS'),\r\n      iconName: EQimaIconName.ASSIGNMENTS,\r\n      path: '/bookings/open',\r\n    },\r\n    {\r\n      label: this._translateService.instant('APP_ASIDE.COMMON_ITEMS.REPORTS'),\r\n      iconName: EQimaIconName.REPORTS,\r\n      path: '/reports',\r\n    },\r\n    {\r\n      label: this._translateService.instant('APP_ASIDE.COMMON_ITEMS.CHECKLISTS'),\r\n      iconName: EQimaIconName.CHECKLIST,\r\n    },\r\n    {\r\n      label: this._translateService.instant('APP_ASIDE.COMMON_ITEMS.SUPPLIERS'),\r\n      iconName: EQimaIconName.SUPPLIER_FACTORY,\r\n    },\r\n    {\r\n      label: this._translateService.instant('APP_ASIDE.COMMON_ITEMS.PAYMENTS'),\r\n      iconName: EQimaIconName.PAYMENT,\r\n      path: '/payments/unpaid',\r\n    },\r\n  ];\r\n\r\n  public constructor(\r\n    private readonly _translateService: TranslateService,\r\n    private readonly _asideService: AsideService,\r\n    private readonly _router: Router\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    const { asideMenuShowSubject$ } = this._asideService;\r\n\r\n    // eslint-disable-next-line rxjs/no-ignored-subscription\r\n    asideMenuShowSubject$.pipe(untilDestroyed(this)).subscribe((isShow: boolean): void => {\r\n      this.isAsideMenuShow = isShow;\r\n    });\r\n  }\r\n\r\n  public trackByIndex(index: Readonly<number>): number {\r\n    return index;\r\n  }\r\n\r\n  public onAsideItemClick(index: Readonly<number>, item: IAsideItem): void {\r\n    this.asideItemCheckedIndex = index;\r\n    this._asideService.updateAsideMenuShow(false);\r\n\r\n    if (item.path) {\r\n      void this._router.navigate([item.path]);\r\n    }\r\n  }\r\n\r\n  public onOverlayClick(): void {\r\n    this._asideService.updateAsideMenuShow(false);\r\n  }\r\n\r\n  public onBookNowClick(): void {\r\n    this._asideService.updateAsideMenuShow(!this.isAsideMenuShow);\r\n  }\r\n}\r\n","import { IUser } from '@aca-new/app/pages/user/shared/models/interfaces/user.interface';\r\nimport { AuthenticationService } from '@aca-new/app/shared/services/authentication.service';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { AfterViewInit, ChangeDetectionStrategy, Component, Inject } from '@angular/core';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MainComponent implements AfterViewInit {\r\n  public constructor(\r\n    private readonly _authenticationService: AuthenticationService,\r\n    @Inject(DOCUMENT) private readonly _document: Document\r\n  ) {}\r\n\r\n  // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n  public initChat(userData: Readonly<IUser>): void {\r\n    // TODO need to move to another position,such as router guard\r\n    const [email] = userData.email?.split(';');\r\n    const { login, firstName, lastName, id } = userData;\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const windowRef = this._document.defaultView as any;\r\n\r\n    windowRef.MessageBirdChatWidget?.init();\r\n    windowRef.MessageBirdChatWidget?.identify(id, {\r\n      email,\r\n      firstName,\r\n      lastName,\r\n      // eslint-disable-next-line @typescript-eslint/naming-convention\r\n      Login: login,\r\n    });\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    const userData: IUser = this._authenticationService.getCurrentUser();\r\n\r\n    if (this._authenticationService.isAuthenticated()) {\r\n      this.initChat(userData);\r\n    }\r\n\r\n    const { currentUserSubject$ } = this._authenticationService;\r\n\r\n    // eslint-disable-next-line rxjs/no-ignored-subscription,@typescript-eslint/prefer-readonly-parameter-types\r\n    currentUserSubject$.pipe(untilDestroyed(this)).subscribe((data: Readonly<IUser>): void => {\r\n      // TODO It needs to be guaranteed to be executed only once\r\n      this.initChat(data);\r\n    });\r\n  }\r\n}\r\n","<div class=\"app-main-container\">\r\n  <app-header></app-header>\r\n  <app-aside></app-aside>\r\n  <div class=\"main-content\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>\r\n","import { AsideMenuComponent } from '@aca-new/app/shared/components/aside/shared/components/aside-menu/aside-menu.component';\nimport { AsideMenuItemComponent } from '@aca-new/app/shared/components/aside/shared/components/aside-menu/share/components/aside-menu-item/aside-menu-item.component';\nimport { PreviousOrderItemComponent } from '@aca-new/app/shared/components/aside/shared/components/aside-menu/share/components/previous-order-item/previous-order-item.component';\nimport { SectionTitleModule } from '@aca-new/app/shared/components/section-title/section-title.module';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { QimaButtonIconModule, QimaDividerModule, QimaDotModule, QimaIceCubeModule, QimaIconModule } from '@qima/ngx-qima';\n\n@NgModule({\n  declarations: [AsideMenuComponent, AsideMenuItemComponent, PreviousOrderItemComponent],\n  exports: [AsideMenuComponent, AsideMenuItemComponent],\n  imports: [CommonModule, SectionTitleModule, QimaIconModule, QimaButtonIconModule, QimaIceCubeModule, QimaDividerModule, QimaDotModule],\n})\nexport class AsideMenuModule {}\n","import { OverlayComponent } from '@aca-new/app/shared/components/overlay/overlay.component';\nimport { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [OverlayComponent],\n  exports: [OverlayComponent],\n})\nexport class OverlayModule {}\n","import { AsideComponent } from '@aca-new/app/shared/components/aside/aside.component';\nimport { AsideItemComponent } from '@aca-new/app/shared/components/aside/shared/components/aside-item/aside-item.component';\nimport { AsideMenuModule } from '@aca-new/app/shared/components/aside/shared/components/aside-menu/aside-menu.module';\nimport { BookNowComponent } from '@aca-new/app/shared/components/aside/shared/components/book-now/book-now.component';\nimport { OverlayModule } from '@aca-new/app/shared/components/overlay/overlay.module';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { QimaDotModule, QimaIconModule } from '@qima/ngx-qima';\n\n@NgModule({\n  declarations: [AsideComponent, BookNowComponent, AsideItemComponent],\n  exports: [AsideComponent],\n  imports: [QimaIconModule, CommonModule, QimaDotModule, AsideMenuModule, OverlayModule],\n})\nexport class AsideModule {}\n","import { HeaderComponent } from '@aca-new/app/shared/components/header/header.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { QimaAvatarModule, QimaDividerModule, QimaIconModule, QimaMenuItemTextModule, QimaMenuModule } from '@qima/ngx-qima';\r\n\r\n@NgModule({\r\n  declarations: [HeaderComponent],\r\n  exports: [HeaderComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule,\r\n    QimaMenuModule,\r\n    QimaMenuItemTextModule,\r\n    QimaDividerModule,\r\n    QimaIconModule,\r\n    QimaAvatarModule,\r\n    RouterModule,\r\n  ],\r\n})\r\nexport class HeaderModule {}\r\n","import { AsideModule } from '@aca-new/app/shared/components/aside/aside.module';\r\nimport { HeaderModule } from '@aca-new/app/shared/components/header/header.module';\r\nimport { MainComponent } from '@aca-new/app/shared/components/main/main.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [MainComponent],\r\n  imports: [HeaderModule, AsideModule, RouterModule],\r\n})\r\nexport class MainModule {}\r\n","import { ELocales } from '@aca-new/app/shared/models/enums/locales.enum';\r\nimport { HttpBackend, HttpClient } from '@angular/common/http';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\n/**\r\n * @description\r\n * ⚠️ Use {@link HttpBackend} instead of {@link HttpClient} to avoid circular dependency due to interceptors catching the requests\r\n * @param {HttpBackend} httpBackend The http backend instance\r\n * @returns {TranslateHttpLoader} The loader\r\n */\r\nexport function HttpLoaderFactory(httpBackend: Readonly<HttpBackend>): TranslateHttpLoader {\r\n  return new TranslateHttpLoader(new HttpClient(httpBackend));\r\n}\r\n\r\n/**\r\n * @description\r\n * Factory that will initialize the locale\r\n * @param {TranslateService} translate The locale service to initialize\r\n * @returns {() => Promise<void>} Function that initialize the locale service\r\n */\r\n// eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\nexport function LocalInitProvider(translate: Readonly<TranslateService>): () => Promise<void> {\r\n  return async (): Promise<void> => {\r\n    translate.addLangs([ELocales.ENGLISH]);\r\n    translate.setDefaultLang(ELocales.ENGLISH);\r\n    await translate.use(ELocales.ENGLISH).toPromise();\r\n  };\r\n}\r\n","import { EStorageKeys } from '@aca-new/app/shared/models/enums/storage-keys.enum';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst ACCESS_TOKEN: string = 'z3b3by7dnj4ryr9aynw3pyph6awaaekx';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  public constructor(private readonly _cookieStorage: CookieService) {}\r\n\r\n  // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\n  public intercept<T>(request: Readonly<HttpRequest<T>>, next: Readonly<HttpHandler>): Observable<HttpEvent<T>> {\r\n    if (!request || !request.url) {\r\n      return next.handle(request);\r\n    }\r\n\r\n    const token = this._cookieStorage.get(EStorageKeys.AUTH_TOKEN);\r\n    const userId = sessionStorage.getItem('userId');\r\n\r\n    if (token && userId) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          'authorization': `Bearer ${token}`,\r\n          'ai-user-id': userId,\r\n          'ai-api-access-token': ACCESS_TOKEN,\r\n        },\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","/* eslint-disable no-magic-numbers */\r\n\r\n/**\r\n * @description\r\n * Hypertext Transfer Protocol (HTTP) response status codes.\r\n * @see {@link https://en.wikipedia.org/wiki/List_of_HTTP_status_codes}\r\n */\r\nexport enum EHttpStatusCode {\r\n  /**\r\n   * @description\r\n   * The server has received the request headers and the client should proceed to send the request body\r\n   * (in the case of a request for which a body needs to be sent; for example, a POST request).\r\n   * Sending a large request body to a server after a request has been rejected for inappropriate headers would be inefficient.\r\n   * To have a server check the request's headers, a client must send Expect: 100-continue as a header in its initial request\r\n   * and receive a 100 Continue status code in response before sending the body. The response 417 Expectation Failed indicates the request should not be continued.\r\n   */\r\n  CONTINUE = 100,\r\n\r\n  /**\r\n   * @description\r\n   * The requester has asked the server to switch protocols and the server has agreed to do so.\r\n   */\r\n  SWITCHING_PROTOCOLS = 101,\r\n\r\n  /**\r\n   * @description\r\n   * A WebDAV request may contain many sub-requests involving file operations, requiring a long time to complete the request.\r\n   * This code indicates that the server has received and is processing the request, but no response is available yet.\r\n   * This prevents the client from timing out and assuming the request was lost.\r\n   */\r\n  PROCESSING = 102,\r\n\r\n  /**\r\n   * @description\r\n   * Standard response for successful HTTP requests.\r\n   * The actual response will depend on the request method used.\r\n   * In a GET request, the response will contain an entity corresponding to the requested resource.\r\n   * In a POST request, the response will contain an entity describing or containing the result of the action.\r\n   */\r\n  OK = 200,\r\n\r\n  /**\r\n   * @description\r\n   * The request has been fulfilled, resulting in the creation of a new resource.\r\n   */\r\n  CREATED = 201,\r\n\r\n  /**\r\n   * @description\r\n   * The request has been accepted for processing, but the processing has not been completed.\r\n   * The request might or might not be eventually acted upon, and may be disallowed when processing occurs.\r\n   */\r\n  ACCEPTED = 202,\r\n\r\n  /**\r\n   * @description\r\n   * SINCE HTTP/1.1\r\n   * The server is a transforming proxy that received a 200 OK from its origin,\r\n   * but is returning a modified version of the origin's response.\r\n   */\r\n  NON_AUTHORITATIVE_INFORMATION = 203,\r\n\r\n  /**\r\n   * @description\r\n   * The server successfully processed the request and is not returning any content.\r\n   */\r\n  NO_CONTENT = 204,\r\n\r\n  /**\r\n   * @description\r\n   * The server successfully processed the request, but is not returning any content.\r\n   * Unlike a 204 response, this response requires that the requester reset the document view.\r\n   */\r\n  RESET_CONTENT = 205,\r\n\r\n  /**\r\n   * @description\r\n   * The server is delivering only part of the resource (byte serving) due to a range header sent by the client.\r\n   * The range header is used by HTTP clients to enable resuming of interrupted downloads,\r\n   * or split a download into multiple simultaneous streams.\r\n   */\r\n  PARTIAL_CONTENT = 206,\r\n\r\n  /**\r\n   * @description\r\n   * The message body that follows is an XML message and can contain a number of separate response codes,\r\n   * depending on how many sub-requests were made.\r\n   */\r\n  MULTI_STATUS = 207,\r\n\r\n  /**\r\n   * @description\r\n   * The members of a DAV binding have already been enumerated in a preceding part of the (multistatus) response,\r\n   * and are not being included again.\r\n   */\r\n  ALREADY_REPORTED = 208,\r\n\r\n  /**\r\n   * @description\r\n   * The server has fulfilled a request for the resource,\r\n   * and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\r\n   */\r\n  IM_USED = 226,\r\n\r\n  /**\r\n   * @description\r\n   * Indicates multiple options for the resource from which the client may choose (via agent-driven content negotiation).\r\n   * For example, this code could be used to present multiple video format options,\r\n   * to list files with different filename extensions, or to suggest word-sense disambiguation.\r\n   */\r\n  MULTIPLE_CHOICES = 300,\r\n\r\n  /**\r\n   * @description\r\n   * This and all future requests should be directed to the given URI.\r\n   */\r\n  MOVED_PERMANENTLY = 301,\r\n\r\n  /**\r\n   * @description\r\n   * This is an example of industry practice contradicting the standard.\r\n   * The HTTP/1.0 specification (RFC 1945) required the client to perform a temporary redirect\r\n   * (the original describing phrase was \"Moved Temporarily\"), but popular browsers implemented 302\r\n   * with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 and 307\r\n   * to distinguish between the two behaviours. However, some Web applications and frameworks\r\n   * use the 302 status code as if it were the 303.\r\n   */\r\n  FOUND = 302,\r\n\r\n  /**\r\n   * @description\r\n   * SINCE HTTP/1.1\r\n   * The response to the request can be found under another URI using a GET method.\r\n   * When received in response to a POST (or PUT/DELETE), the client should presume that\r\n   * the server has received the data and should issue a redirect with a separate GET message.\r\n   */\r\n  SEE_OTHER = 303,\r\n\r\n  /**\r\n   * @description\r\n   * Indicates that the resource has not been modified since the version specified by the request headers If-Modified-Since or If-None-Match.\r\n   * In such case, there is no need to retransmit the resource since the client still has a previously-downloaded copy.\r\n   */\r\n  NOT_MODIFIED = 304,\r\n\r\n  /**\r\n   * @description\r\n   * SINCE HTTP/1.1\r\n   * The requested resource is available only through a proxy, the address for which is provided in the response.\r\n   * Many HTTP clients (such as Mozilla and Internet Explorer) do not correctly handle responses with this status code, primarily for security reasons.\r\n   */\r\n  USE_PROXY = 305,\r\n\r\n  /**\r\n   * @description\r\n   * No longer used. Originally meant \"Subsequent requests should use the specified proxy.\"\r\n   */\r\n  SWITCH_PROXY = 306,\r\n\r\n  /**\r\n   * @description\r\n   * SINCE HTTP/1.1\r\n   * In this case, the request should be repeated with another URI; however, future requests should still use the original URI.\r\n   * In contrast to how 302 was historically implemented, the request method is not allowed to be changed when reissuing the original request.\r\n   * For example, a POST request should be repeated using another POST request.\r\n   */\r\n  TEMPORARY_REDIRECT = 307,\r\n\r\n  /**\r\n   * @description\r\n   * The request and all future requests should be repeated using another URI.\r\n   * 307 and 308 parallel the behaviors of 302 and 301, but do not allow the HTTP method to change.\r\n   * So, for example, submitting a form to a permanently redirected resource may continue smoothly.\r\n   */\r\n  PERMANENT_REDIRECT = 308,\r\n\r\n  /**\r\n   * @description\r\n   * The server cannot or will not process the request due to an apparent client error\r\n   * (e.g., malformed request syntax, too large size, invalid request message framing, or deceptive request routing).\r\n   */\r\n  BAD_REQUEST = 400,\r\n\r\n  /**\r\n   * @description\r\n   * Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet\r\n   * been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the\r\n   * requested resource. See Basic access authentication and Digest access authentication. 401 semantically means\r\n   * \"unauthenticated\",i.e. the user does not have the necessary credentials.\r\n   */\r\n  UNAUTHORIZED = 401,\r\n\r\n  /**\r\n   * @description\r\n   * Reserved for future use. The original intention was that this code might be used as part of some form of digital\r\n   * cash or micro payment scheme, but that has not happened, and this code is not usually used.\r\n   * Google Developers API uses this status if a particular developer has exceeded the daily limit on requests.\r\n   */\r\n  PAYMENT_REQUIRED = 402,\r\n\r\n  /**\r\n   * @description\r\n   * The request was valid, but the server is refusing action.\r\n   * The user might not have the necessary permissions for a resource.\r\n   */\r\n  FORBIDDEN = 403,\r\n\r\n  /**\r\n   * @description\r\n   * The requested resource could not be found but may be available in the future.\r\n   * Subsequent requests by the client are permissible.\r\n   */\r\n  NOT_FOUND = 404,\r\n\r\n  /**\r\n   * @description\r\n   * A request method is not supported for the requested resource;\r\n   * for example, a GET request on a form that requires data to be presented via POST, or a PUT request on a read-only resource.\r\n   */\r\n  METHOD_NOT_ALLOWED = 405,\r\n\r\n  /**\r\n   * @description\r\n   * The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.\r\n   */\r\n  NOT_ACCEPTABLE = 406,\r\n\r\n  /**\r\n   * @description\r\n   * The client must first authenticate itself with the proxy.\r\n   */\r\n  PROXY_AUTHENTICATION_REQUIRED = 407,\r\n\r\n  /**\r\n   * @description\r\n   * The server timed out waiting for the request.\r\n   * According to HTTP specifications:\r\n   * \"The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\"\r\n   */\r\n  REQUEST_TIMEOUT = 408,\r\n\r\n  /**\r\n   * @description\r\n   * Indicates that the request could not be processed because of conflict in the request,\r\n   * such as an edit conflict between multiple simultaneous updates.\r\n   */\r\n  CONFLICT = 409,\r\n\r\n  /**\r\n   * @description\r\n   * Indicates that the resource requested is no longer available and will not be available again.\r\n   * This should be used when a resource has been intentionally removed and the resource should be purged.\r\n   * Upon receiving a 410 status code, the client should not request the resource in the future.\r\n   * Clients such as search engines should remove the resource from their indices.\r\n   * Most use cases do not require clients and search engines to purge the resource, and a \"404 Not Found\" may be used instead.\r\n   */\r\n  GONE = 410,\r\n\r\n  /**\r\n   * @description\r\n   * The request did not specify the length of its content, which is required by the requested resource.\r\n   */\r\n  LENGTH_REQUIRED = 411,\r\n\r\n  /**\r\n   * @description\r\n   * The server does not meet one of the preconditions that the requester put on the request.\r\n   */\r\n  PRECONDITION_FAILED = 412,\r\n\r\n  /**\r\n   * @description\r\n   * The request is larger than the server is willing or able to process. Previously called \"Request Entity Too Large\".\r\n   */\r\n  PAYLOAD_TOO_LARGE = 413,\r\n\r\n  /**\r\n   * @description\r\n   * The URI provided was too long for the server to process. Often the result of too much data being encoded as a query-string of a GET request,\r\n   * in which case it should be converted to a POST request.\r\n   * Called \"Request-URI Too Long\" previously.\r\n   */\r\n  URI_TOO_LONG = 414,\r\n\r\n  /**\r\n   * @description\r\n   * The request entity has a media type which the server or resource does not support.\r\n   * For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.\r\n   */\r\n  UNSUPPORTED_MEDIA_TYPE = 415,\r\n\r\n  /**\r\n   * @description\r\n   * The client has asked for a portion of the file (byte serving), but the server cannot supply that portion.\r\n   * For example, if the client asked for a part of the file that lies beyond the end of the file.\r\n   * Called \"Requested Range Not Satisfiable\" previously.\r\n   */\r\n  RANGE_NOT_SATISFIABLE = 416,\r\n\r\n  /**\r\n   * @description\r\n   * The server cannot meet the requirements of the Expect request-header field.\r\n   */\r\n  EXPECTATION_FAILED = 417,\r\n\r\n  /**\r\n   * @description\r\n   * This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol,\r\n   * and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by\r\n   * teapots requested to brew coffee. This HTTP status is used as an Easter egg in some websites, including Google.com.\r\n   */\r\n  I_AM_A_TEAPOT = 418,\r\n\r\n  /**\r\n   * @description\r\n   * The request was directed at a server that is not able to produce a response (for example because a connection reuse).\r\n   */\r\n  MISDIRECTED_REQUEST = 421,\r\n\r\n  /**\r\n   * @description\r\n   * The request was well-formed but was unable to be followed due to semantic errors.\r\n   */\r\n  UNPROCESSABLE_ENTITY = 422,\r\n\r\n  /**\r\n   * @description\r\n   * The resource that is being accessed is locked.\r\n   */\r\n  LOCKED = 423,\r\n\r\n  /**\r\n   * @description\r\n   * The request failed due to failure of a previous request (e.g., a PROPPATCH).\r\n   */\r\n  FAILED_DEPENDENCY = 424,\r\n\r\n  /**\r\n   * @description\r\n   * The client should switch to a different protocol such as TLS/1.0, given in the Upgrade header field.\r\n   */\r\n  UPGRADE_REQUIRED = 426,\r\n\r\n  /**\r\n   * @description\r\n   * The origin server requires the request to be conditional.\r\n   * Intended to prevent \"the 'lost update' problem, where a client\r\n   * GETs a resource's state, modifies it, and PUTs it back to the server,\r\n   * when meanwhile a third party has modified the state on the server, leading to a conflict.\"\r\n   */\r\n  PRECONDITION_REQUIRED = 428,\r\n\r\n  /**\r\n   * @description\r\n   * The user has sent too many requests in a given amount of time. Intended for use with rate-limiting schemes.\r\n   */\r\n  TOO_MANY_REQUESTS = 429,\r\n\r\n  /**\r\n   * @description\r\n   * The server is unwilling to process the request because either an individual header field,\r\n   * or all the header fields collectively, are too large.\r\n   */\r\n  REQUEST_HEADER_FIELDS_TOO_LARGE = 431,\r\n\r\n  /**\r\n   * @description\r\n   * A server operator has received a legal demand to deny access to a resource or to a set of resources\r\n   * that includes the requested resource. The code 451 was chosen as a reference to the novel Fahrenheit 451.\r\n   */\r\n  UNAVAILABLE_FOR_LEGAL_REASONS = 451,\r\n\r\n  /**\r\n   * @description\r\n   * A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.\r\n   */\r\n  INTERNAL_SERVER_ERROR = 500,\r\n\r\n  /**\r\n   * @description\r\n   * The server either does not recognize the request method, or it lacks the ability to fulfill the request.\r\n   * Usually this implies future availability (e.g., a new feature of a web-service API).\r\n   */\r\n  NOT_IMPLEMENTED = 501,\r\n\r\n  /**\r\n   * @description\r\n   * The server was acting as a gateway or proxy and received an invalid response from the upstream server.\r\n   */\r\n  BAD_GATEWAY = 502,\r\n\r\n  /**\r\n   * @description\r\n   * The server is currently unavailable (because it is overloaded or down for maintenance).\r\n   * Generally, this is a temporary state.\r\n   */\r\n  SERVICE_UNAVAILABLE = 503,\r\n\r\n  /**\r\n   * @description\r\n   * The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.\r\n   */\r\n  GATEWAY_TIMEOUT = 504,\r\n\r\n  /**\r\n   * @description\r\n   * The server does not support the HTTP protocol version used in the request\r\n   */\r\n  HTTP_VERSION_NOT_SUPPORTED = 505,\r\n\r\n  /**\r\n   * @description\r\n   * Transparent content negotiation for the request results in a circular reference.\r\n   */\r\n  VARIANT_ALSO_NEGOTIATES = 506,\r\n\r\n  /**\r\n   * @description\r\n   * The server is unable to store the representation needed to complete the request.\r\n   */\r\n  INSUFFICIENT_STORAGE = 507,\r\n\r\n  /**\r\n   * @description\r\n   * The server detected an infinite loop while processing the request.\r\n   */\r\n  LOOP_DETECTED = 508,\r\n\r\n  /**\r\n   * @description\r\n   * Further extensions to the request are required for the server to fulfill it.\r\n   */\r\n  NOT_EXTENDED = 510,\r\n\r\n  /**\r\n   * @description\r\n   * The client needs to authenticate to gain network access.\r\n   * Intended for use by intercepting proxies used to control access to the network (e.g., \"captive portals\" used\r\n   * to require agreement to Terms of Service before granting full Internet access via a Wi-Fi hotspot).\r\n   */\r\n  NETWORK_AUTHENTICATION_REQUIRED = 511,\r\n}\r\n","import { EHttpStatusCode } from '@aca-new/app/shared/models/enums/http-status-code.enum';\nimport { HttpInterceptor, HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n  // eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\n  public intercept<T>(request: Readonly<HttpRequest<T>>, next: Readonly<HttpHandler>): Observable<HttpEvent<T>> {\n    return next.handle(request).pipe(\n      tap({\n        error(error: HttpErrorResponse | Error | unknown): void | never {\n          if (error instanceof HttpErrorResponse) {\n            if (error.status === EHttpStatusCode.FORBIDDEN) {\n              // TODO handle 403 error\n              return;\n            }\n\n            if (error.status === EHttpStatusCode.INTERNAL_SERVER_ERROR) {\n              // TODO handle 500 error\n              return;\n            }\n\n            // Rethrow since not handled\n            throw error;\n          } else if (error instanceof Error) {\n            // Rethrow since not handled\n            throw error;\n          }\n\n          // Rethrow since not handled\n          throw new Error('Unknown error thrown');\n        },\n      })\n    );\n  }\n}\n","import { AppRoutingModule } from './app-routing.module';\r\nimport { LandingModule } from './pages/landing/landing.module';\r\nimport { LoginModule } from './pages/user/pages/login/login.module';\r\nimport { ELocales } from './shared/models/enums/locales.enum';\r\nimport { BookingsModule } from '@aca-new/app/pages/bookings/bookings.module';\r\nimport { MainComponent } from '@aca-new/app/shared/components/main/main.component';\r\nimport { MainModule } from '@aca-new/app/shared/components/main/main.module';\r\nimport { HttpLoaderFactory, LocalInitProvider } from '@aca-new/app/shared/factories/i18n.factories';\r\nimport { AuthInterceptor } from '@aca-new/app/shared/interceptors/auth.interceptor';\r\nimport { ErrorHandlerInterceptor } from '@aca-new/app/shared/interceptors/error-handler.interceptor';\r\nimport { HTTP_INTERCEPTORS, HttpBackend, HttpClientModule } from '@angular/common/http';\r\nimport { APP_INITIALIZER, FactoryProvider, LOCALE_ID, NgModule, ValueProvider } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport {\r\n  EQimaLoggerLevel,\r\n  EQimaTranslationKey,\r\n  QIMA_ASSETS_PATH_TOKEN,\r\n  QIMA_DATE_FACTORY_TOKEN,\r\n  QIMA_TRANSLATION_FACTORY_TOKEN,\r\n  QimaDateFactory,\r\n  QimaDateModule,\r\n  QimaDateType,\r\n  QimaLoggerModule,\r\n  QimaModule,\r\n  QimaTranslationFactory,\r\n  QimaTranslationModule,\r\n} from '@qima/ngx-qima';\r\nimport { QimaOptionalType } from '@qima/ngx-qima/models/types/qima-optional.type';\r\nimport { AngularSvgIconModule } from 'angular-svg-icon';\r\nimport dayjs from 'dayjs';\r\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\r\nimport timezone from 'dayjs/plugin/timezone';\r\nimport 'dayjs/locale/en';\r\nimport 'dayjs/locale/es';\r\nimport 'dayjs/locale/zh-cn';\r\nimport { CookieModule } from 'ngx-cookie';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\ndayjs.extend(localizedFormat);\r\ndayjs.extend(timezone);\r\n\r\nclass TranslationService implements QimaTranslationFactory {\r\n  public readonly activeLanguage$: BehaviorSubject<string> = new BehaviorSubject<string>(this._localeId);\r\n\r\n  public constructor(private readonly _translateService: TranslateService, private readonly _localeId: string) {}\r\n\r\n  public translate$(translationKey: Readonly<EQimaTranslationKey>, extra?: Readonly<Record<string, unknown>>): Observable<string> {\r\n    // Note the prefix to match the JSON paths\r\n    return this._translateService.get(`ngx-qima.${translationKey}`, extra);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {TranslateService} translateService from ngx-translate/core\r\n * @param {string} localeId local id\r\n * @returns {TranslationService} translation service\r\n */\r\n// eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types\r\nfunction TranslationFactory(translateService: TranslateService, localeId: string): TranslationService {\r\n  return new TranslationService(translateService, localeId);\r\n}\r\n\r\n/**\r\n * @returns {DateService} date service\r\n */\r\nfunction DateFactory(): DateService {\r\n  return new DateService();\r\n}\r\n\r\nclass DateService implements QimaDateFactory {\r\n  public format(date: Readonly<QimaOptionalType<QimaDateType>>, format: Readonly<string>): string {\r\n    return dayjs(date).format(format);\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    QimaModule.forRoot(),\r\n    AppRoutingModule,\r\n    QimaDateModule,\r\n    LoginModule,\r\n    LandingModule,\r\n    BookingsModule,\r\n    HttpClientModule,\r\n    QimaTranslationModule.forRoot(),\r\n    TranslateModule.forRoot({\r\n      defaultLanguage: ELocales.ENGLISH,\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpBackend],\r\n      },\r\n    }),\r\n    // Used by ngx-qima library\r\n    AngularSvgIconModule.forRoot(),\r\n    QimaTranslationModule.forRoot(),\r\n    CookieModule.forRoot(),\r\n    MainModule,\r\n    QimaLoggerModule.forRoot({\r\n      loggerLevel: EQimaLoggerLevel.DEBUG,\r\n    }),\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: QIMA_DATE_FACTORY_TOKEN,\r\n      useFactory: DateFactory,\r\n    } as FactoryProvider,\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: LocalInitProvider,\r\n      deps: [TranslateService],\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: QIMA_ASSETS_PATH_TOKEN,\r\n      useValue: 'ngx-qima/assets/',\r\n    } as ValueProvider,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: ErrorHandlerInterceptor,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: QIMA_TRANSLATION_FACTORY_TOKEN,\r\n      useFactory: TranslationFactory,\r\n      deps: [TranslateService, LOCALE_ID],\r\n    } as FactoryProvider,\r\n  ],\r\n  bootstrap: [MainComponent],\r\n})\r\nexport class AppModule {}\r\n","import { AppModule } from './app/app.module';\r\nimport { ENVIRONMENT } from './environments/environment';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nif (ENVIRONMENT.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err): void => {\r\n    // Exceptionally allow a console call\r\n    // eslint-disable-next-line no-restricted-globals\r\n    console.error(err);\r\n  });\r\n"],"sourceRoot":"webpack:///","file":"main.e22e2327e6a1aa05ebc4.js"}